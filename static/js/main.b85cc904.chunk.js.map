{"version":3,"sources":["shared/theme.ts","redux/actions/actionTypes.ts","redux/actions/actions.ts","Components/switchValueButton.tsx","hooks/useCounter.tsx","Components/Icon.tsx","Components/Counter/arrowButton.tsx","Components/Counter/counterButton.tsx","Components/Counter/longBreakCounter.tsx","Components/Counter/pomodoroCounter.tsx","Components/Counter/shortBreakCounter.tsx","Components/Counter/index.tsx","Components/settings/longBreakInput.tsx","Components/settings/pomodoroInput.tsx","Components/settings/shortBreakInput.tsx","Components/settings/settingsInputs.tsx","Components/checkbox.tsx","Components/settings/autoBreakStart.tsx","Components/settings/settingsModalContent.tsx","shared/modal.tsx","Providers/ModalProvider.tsx","Components/settings/settings.tsx","Components/header.tsx","Components/layout.tsx","Providers/Theme.tsx","App.tsx","reportWebVitals.js","redux/reducers/pomodoroCounterReducer.ts","shared/mockData.ts","redux/reducers/rootReducer.ts","redux/store/configureStore.ts","index.tsx"],"names":["theme","space","fontSizes","fontWeights","lineHeights","borderRadiuss","borders","opacities","radii","colors","info","primary","danger","success","warning","blacks","whites","greys","ADD_POMODORO_TIME","AUTO_BREAK","SWITCH_COUNTER","SET_SELECTED_COUNTER","FETCH_ITEMS","switchCounter","payload","type","setSelectedCounter","SwitchValueButton","onClick","title","selected","sx","border","outline","borderRadius","fontFamily","fontSize","height","cursor","background","color","opacity","fontWeight","display","justifyContent","alignItems","useCounter","initSeconds","initMinutes","React","useState","seconds","setSeconds","minutes","setMinutes","start","setStart","useEffect","interval","setInterval","clearInterval","startCounter","stopCounter","IconNamesMap","checkCircle","settings","rightArrow","minus","cross","Icon","name","style","className","ArrowButton","isActive","handleStopCounter","width","position","right","top","marginTop","marginRight","transform","marginLeft","CounterButton","handleFalseACtive","handleActiveTrue","valueSelect","useSelector","state","pomodoroCounter","counter","rawCounterData","data","switchColors","value","backgroundColor","LongBreakCounter","autoBreakSwitch","time","long","dispatch","useDispatch","flexDirection","setTimeout","PomodoroCounter","count","ShortBreakCounter","short","Counter","setIsActive","autoBreak","selectedCounter","handleActive","current","window","confirm","margin","padding","marginBottom","map","item","id","LongBreakInput","onChange","min","boxShadow","boxSizing","PomodoroInput","ShortBreakInput","webkitTapHighlightColor","SettingsInputs","values","borderTop","borderBottom","paddingTop","paddingBottom","CheckboxInput","autoSwitch","checked","AutoBreakStart","SettingsModalContent","setValues","closeModalDialog","useModal","ref","useRef","bootstrap","useCallback","handleSubmitTimes","handleClickOutside","e","el","target","Node","contains","document","addEventListener","removeEventListener","textTransform","zIndex","Number","textAlign","minWidth","ModalDialog","visible","content","open","contentStyle","ModalContext","createContext","useContext","ModalProvider","children","setVisible","setContent","Provider","setDialog","Settings","openLabelConfirmDialog","useLabelConfirmDialog","Header","Layout","Theme","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","action","rootReducer","combineReducers","persistConfig","key","storage","persistedReducer","persistReducer","store","createStore","composeWithDevTools","applyMiddleware","thunk","persistor","persistStore","configureStore","ReactDOM","render","loading","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.b85cc904.chunk.js","sourcesContent":["const theme = {\n  space: [\n    4, //0\n    8, //1\n    12, //2\n    16, //3\n    32, //4\n    60, //5\n    64, //6\n    128, //7\n    \"100%\", //8\n    20, //9\n    10, //10\n    70, //11\n    \"100vh\", //12\n    620, //13\n    \"480px\", //14\n    40, //15\n    \"20px\", //16\n    \"0px\", //17\n    \"30px\", //18\n    \"2px\", //19\n    \"12px\", //20\n    28, //21\n    55, //22\n    200, //23\n    \"58px\", //24\n    \"35px\", //25\n    540, //26\n    335, //27\n    23, //28\n    0, //29\n    3, //30\n    120, //31\n    \"98px\", //32\n    \"14px\", //33\n    \"4px\", //34\n    \"10px\", //35\n    \"1px\", //36\n    35, //37\n    30, //38\n    25, //39\n    15, //40\n    -10, //41\n    0.2, //42\n    2147483647, //43\n    \"3px\", //44\n    2000, //45\n    300, //46\n  ],\n  fontSizes: [13, 16, 18, 24, 28, 20, 22],\n  fontWeights: [100, 200, 300, 400, 500, 600, 700, 800, 900, \"bold\"],\n  lineHeights: [1.5, 1.8, 2, 2.5],\n  borderRadiuss: [4, 6, 3, 50],\n  borders: [\n    \"1px solid\", //0\n    \"2px solid\", //1\n    \"4px solid\", //2\n    \"6px solid\", //3\n    \"8px solid\", //4\n    \"10px solid\", //5\n  ],\n  opacities: [0, 1, 0.9],\n  radii: [0, 2, 4, 6, 8, 10, 12, 16, 0.9],\n  colors: {\n    info: \"#1ecbe1\",\n    primary: [\"#1676e9\", \"rgb(67, 126, 168)\"],\n    danger: [\"#e72918\", \"rgb(219, 82, 77)\", \"rgba(182, 165, 166, 0.2)\"],\n    success: [\"#6bc33c\", \"rgba(132, 199, 51, 0.8)\", \"rgb(70, 142, 145)\"],\n    warning: \"#fff900\",\n    blacks: [\n      \"rgba(0,0,0)\", //0\n      \"rgba(0,0,0,.1)\", //1\n      \"rgba(0,0,0,.2)\", //2\n      \"rgba(0,0,0,.25)\", //3\n      \"rgba(0,0,0,.3)\", //4\n      \"rgba(0,0,0,.4)\", //5\n      \"rgba(0,0,0,.5)\", //6\n      \"rgba(0,0,0,.6)\", //7\n      \"rgba(0,0,0,.7)\", //8\n      \"rgba(0,0,0,.8)\", //9\n      \"rgba(0,0,0,.9)\", //10\n      \"rgba(0, 0, 0, 0.15)\", //11\n      \"rgba(0, 0, 0, 0.1)\", //12\n    ],\n    whites: [\n      \"rgba(255,255,255,.1)\", //0\n      \"rgba(255,255,255,.2)\", //1\n      \"rgba(255,255,255,.3)\", //2\n      \"rgba(255,255,255,.4)\", //3\n      \"rgba(255,255,255,.5)\", //4\n      \"rgba(255,255,255,.6)\", //5\n      \"rgba(255,255,255,.7)\", //6\n      \"rgba(255,255,255,.8)\", //7\n      \"rgba(255,255,255,.9)\", //8\n      \"rgba(255, 255, 255, 0.1)\", //9\n    ],\n    greys: [\n      \"rgb(187, 187, 187)\", //0\n      \"rgb(239, 239, 239)\", //1\n      \"rgb(85, 85, 85)\", //2\n      \"rgb(34, 34, 34)\", //3\n      \"rgb(204, 204, 204)\", //4\n    ],\n  },\n};\nexport default theme;\n","export const ADD_POMODORO_TIME = \"ADD_POMODORO_TIME\";\nexport const AUTO_BREAK = \"AUTO_BREAK\";\nexport const SWITCH_COUNTER = \"SWITCH_COUNTER\";\nexport const SET_SELECTED_COUNTER = \"SET_SELECTED_COUNTER\";\nexport const FETCH_ITEMS = \"FETCH_ITEMS\";\n","import {\n  ADD_POMODORO_TIME,\n  AUTO_BREAK,\n  FETCH_ITEMS,\n  SET_SELECTED_COUNTER,\n  SWITCH_COUNTER,\n} from \"./actionTypes\";\n\nexport const addPomodoroTime = (payload: TState) => {\n  return {\n    type: ADD_POMODORO_TIME,\n    payload,\n  };\n};\n\nexport const autoBreak = () => {\n  return { type: AUTO_BREAK };\n};\n\nexport const switchCounter = (payload: string) => {\n  return {\n    type: SWITCH_COUNTER,\n    payload,\n  };\n};\n\nexport const setSelectedCounter = (payload: string) => {\n  return {\n    type: SET_SELECTED_COUNTER,\n    payload,\n  };\n};\n\nexport const fetchItems = () => {\n  return {\n    type: FETCH_ITEMS,\n  };\n};\n","import { Button } from \"@theme-ui/components\";\nimport React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport theme from \"../shared/theme\";\n\ninterface IProps {\n  onClick: () => void;\n  title: string;\n  selected?: boolean;\n}\n\nconst SwitchValueButton: React.FC<IProps> = ({ onClick, title, selected }) => {\n  return (\n    <Button\n      onClick={onClick}\n      sx={{\n        border: \"none\",\n        outline: \"none\",\n        borderRadius: theme.borderRadiuss[0],\n        fontFamily: \"ArialRoundedMTBold\",\n        fontSize: theme.fontSizes[1],\n        height: theme.space[21],\n        cursor: \"pointer\",\n        background: selected ? theme.colors.blacks[11] : \"transparent\",\n        color: theme.colors.whites[8],\n        opacity: theme.opacities[1],\n        fontWeight: theme.fontWeights[9],\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n      }}\n    >\n      {title}\n    </Button>\n  );\n};\nexport default SwitchValueButton;\n","import React from \"react\";\n\nconst useCounter = (initSeconds: number, initMinutes: number) => {\n  const [seconds, setSeconds] = React.useState(initSeconds);\n  const [minutes, setMinutes] = React.useState(initMinutes);\n  const [start, setStart] = React.useState(false);\n\n  const startCounter = () => {\n    setStart(true);\n  };\n\n  const stopCounter = () => {\n    setStart(false);\n  };\n\n  React.useEffect(() => {\n    setSeconds(initSeconds);\n    setMinutes(initMinutes);\n  }, [initMinutes, initSeconds]);\n\n  React.useEffect(() => {\n    var interval: any = null;\n    if (start) {\n      interval = setInterval(() => {\n        setSeconds((seconds: number) => seconds - 1);\n        setMinutes((minutes: number) => minutes);\n      }, 1000);\n    }\n    if (start && minutes !== 0 && seconds === 0) {\n      setSeconds(59);\n      setMinutes((minutes: number) => minutes - 1);\n    }\n    if (start && minutes === 0 && seconds === 0) {\n      clearInterval(interval);\n      setStart(false);\n      setSeconds(0);\n      setMinutes(0);\n    }\n    return () => clearInterval(interval);\n  }, [start, seconds, minutes]);\n\n  return {\n    seconds,\n    minutes,\n    start,\n    startCounter,\n    stopCounter,\n  };\n};\n\nexport default useCounter;\n","import React from \"react\";\nimport { Box } from \"theme-ui\";\n\nconst IconNamesMap = {\n  checkCircle: \"fa fa-check-circle\",\n  settings: \"fa fa-cog\",\n  rightArrow: \"fa fa-caret-right\",\n  minus: \"fa fa-minus\",\n  cross: \"fa fa-times\",\n};\n\nexport type IconName = keyof typeof IconNamesMap;\n\ninterface IProps {\n  name: IconName;\n  style?: React.CSSProperties | undefined;\n  color?: string;\n  fontSize?: number;\n}\n\nconst Icon: React.FC<IProps> = ({ name, color, style }) => {\n  return (\n    <Box>\n      <i className={IconNamesMap[name]} color={color} style={style} />\n    </Box>\n  );\n};\nexport default Icon;\n","import { Box, Button } from \"@theme-ui/components\";\nimport React from \"react\";\nimport theme from \"../../shared/theme\";\nimport Icon from \"../Icon\";\n\ninterface IProps {\n  isActive: boolean;\n  handleStopCounter?: () => void;\n}\n\nconst ArrowButton: React.FC<IProps> = ({ isActive, handleStopCounter }) => {\n  return (\n    <Box>\n      {isActive ? (\n        <Button\n          onClick={handleStopCounter}\n          sx={{\n            cursor: \"pointer\",\n            border: \"none\",\n            width: theme.space[24],\n            height: theme.space[24],\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            display: \"flex\",\n            fontSize: theme.space[25],\n            position: \"absolute\",\n            right: theme.space[26],\n            top: theme.space[27],\n            background: \"transparent\",\n            marginTop: -175,\n            marginRight: -490,\n          }}\n        >\n          <Icon name=\"rightArrow\" />\n          <Box\n            sx={{\n              width: theme.space[21],\n              height: theme.space[21],\n              fontSize: theme.space[28],\n              marginTop: theme.space[29],\n              alignItems: \"center\",\n              justifyContent: \"center\",\n              display: \"flex\",\n              transform: \"rotate(90deg)\",\n              position: \"absolute\",\n              marginLeft: theme.space[30],\n            }}\n          >\n            <Icon name=\"minus\" />\n          </Box>\n        </Button>\n      ) : null}\n    </Box>\n  );\n};\n\nexport default ArrowButton;\n","import { Button, Flex } from \"@theme-ui/components\";\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport theme from \"../../shared/theme\";\n\ninterface IProps {\n  startCounter: () => void;\n  isActive: boolean;\n  stopCounter: () => void;\n  handleFalseACtive?: () => void;\n  handleActiveTrue: () => void;\n}\n\nconst CounterButton: React.FC<IProps> = ({\n  startCounter,\n  isActive,\n  stopCounter,\n  handleFalseACtive,\n  handleActiveTrue,\n}) => {\n  const valueSelect = useSelector(\n    (state: RootState) => state.pomodoroCounter.counter\n  );\n  const rawCounterData = useSelector(\n    (state: RootState) => state.pomodoroCounter.data\n  );\n\n  const switchColors =\n    valueSelect === rawCounterData[0].value\n      ? theme.colors.danger[1]\n      : valueSelect === rawCounterData[1].value\n      ? theme.colors.success[2]\n      : valueSelect === rawCounterData[2].value\n      ? theme.colors.primary[1]\n      : theme.colors.danger[1];\n\n  const handleStartCounter = () => {\n    startCounter();\n    handleActiveTrue();\n  };\n\n  const handleStopCounter = () => {\n    handleFalseACtive && handleFalseACtive();\n    stopCounter();\n  };\n\n  return (\n    <Flex\n      sx={{\n        alignItems: \"center\",\n        justifyContent: \"center\",\n      }}\n    >\n      <Button\n        onClick={!isActive ? handleStartCounter : handleStopCounter}\n        sx={{\n          cursor: \"pointer\",\n          border: \"none\",\n          outline: \"none\",\n          marginTop: theme.space[16],\n          borderRadius: theme.fontSizes[0],\n          fontFamily: \"ArialRoundedMTBold\",\n          fontSize: theme.fontSizes[6],\n          height: theme.space[22],\n          color: switchColors,\n          fontWeight: theme.fontWeights[9],\n          width: theme.space[23],\n          backgroundColor: theme.colors.whites[8],\n        }}\n      >\n        {!isActive ? \"START\" : \"STOP\"}\n      </Button>\n    </Flex>\n  );\n};\n\nexport default CounterButton;\n","import React from \"react\";\nimport { Box, Flex } from \"theme-ui\";\nimport useCounter from \"../../hooks/useCounter\";\nimport theme from \"../../shared/theme\";\nimport ArrowButton from \"./arrowButton\";\nimport CounterButton from \"./counterButton\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setSelectedCounter, switchCounter } from \"../../redux/actions/actions\";\n\ninterface IProps {\n  isActive: boolean;\n  // handleStopCounter: () => void;\n  handleFalseACtive: () => void;\n  handleActiveTrue: () => void;\n  autoBreakSwitch: boolean;\n}\n\nconst LongBreakCounter: React.FC<IProps> = ({\n  isActive,\n  // handleStopCounter,\n  handleFalseACtive,\n  handleActiveTrue,\n  autoBreakSwitch,\n}) => {\n  const time = useSelector((state: RootState) => state.pomodoroCounter);\n  const { seconds, startCounter, minutes, stopCounter } = useCounter(\n    0,\n    time.long\n  );\n  const rawCounterData = useSelector(\n    (state: RootState) => state.pomodoroCounter.data\n  );\n  const dispatch = useDispatch();\n\n  const conditionalHandler = () => {\n    if (autoBreakSwitch) {\n      if (minutes === 0 && seconds === 0) {\n        handleFalseACtive();\n        dispatch(switchCounter(rawCounterData[0].value));\n        dispatch(setSelectedCounter(rawCounterData[0].value));\n      }\n      if (minutes !== 0 && seconds === 0) {\n        setTimeout(() => {\n          handleActiveTrue();\n          startCounter();\n        });\n      }\n    } else {\n      if (minutes === 0 && seconds === 0) {\n        handleFalseACtive();\n        dispatch(switchCounter(rawCounterData[0].value));\n        dispatch(setSelectedCounter(rawCounterData[0].value));\n      }\n    }\n    return (\n      <Flex>\n        <Box>{minutes < 10 ? \"0\" + minutes : minutes}</Box>\n        <Box>:</Box>\n        <Box>{seconds < 10 ? \"0\" + seconds : seconds}</Box>\n      </Flex>\n    );\n  };\n\n  return (\n    <Flex\n      sx={{\n        fontSize: theme.space[31],\n        fontWeight: \"bold\",\n        marginTop: theme.space[9],\n        fontFamily: \"ArialRoundedMTBold\",\n        color: \"white\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        flexDirection: \"column\",\n        position: \"relative\",\n      }}\n    >\n      {conditionalHandler()}\n      <CounterButton\n        startCounter={startCounter}\n        stopCounter={stopCounter}\n        isActive={isActive}\n        handleFalseACtive={handleFalseACtive}\n        handleActiveTrue={handleActiveTrue}\n      />\n      <ArrowButton\n        isActive={isActive}\n        // handleStopCounter={handleStopCounter}\n      />\n    </Flex>\n  );\n};\n\nexport default LongBreakCounter;\n","import React from \"react\";\nimport { Box, Flex } from \"theme-ui\";\nimport useCounter from \"../../hooks/useCounter\";\nimport theme from \"../../shared/theme\";\nimport ArrowButton from \"./arrowButton\";\nimport CounterButton from \"./counterButton\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setSelectedCounter, switchCounter } from \"../../redux/actions/actions\";\n\ninterface IProps {\n  isActive: boolean;\n  handleStopCounter?: () => void;\n  handleFalseACtive: () => void;\n  handleActiveTrue: () => void;\n}\n\nconst PomodoroCounter: React.FC<IProps> = ({\n  isActive,\n  handleStopCounter,\n  handleFalseACtive,\n  handleActiveTrue,\n}) => {\n  const time = useSelector((state: RootState) => state.pomodoroCounter);\n  const dispatch = useDispatch();\n  const { seconds, minutes, startCounter, stopCounter } = useCounter(\n    0,\n    time.count\n  );\n  const rawCounterData = useSelector(\n    (state: RootState) => state.pomodoroCounter.data\n  );\n\n  const conditionalHandler = () => {\n    if (minutes === 0 && seconds === 0) {\n      setTimeout(() => {\n        stopCounter();\n        handleFalseACtive();\n        dispatch(switchCounter(rawCounterData[1].value));\n        dispatch(setSelectedCounter(rawCounterData[1].value));\n      }, 1000);\n      return (\n        <Flex>\n          <Box>{minutes < 10 ? \"0\" + minutes : minutes}</Box>\n          <Box>:</Box>\n          <Box>{seconds < 10 ? \"0\" + seconds : seconds}</Box>\n        </Flex>\n      );\n    } else {\n      return (\n        <Flex>\n          <Box>{minutes < 10 ? \"0\" + minutes : minutes}</Box>\n          <Box>:</Box>\n          <Box>{seconds < 10 ? \"0\" + seconds : seconds}</Box>\n        </Flex>\n      );\n    }\n  };\n\n  return (\n    <Flex\n      sx={{\n        fontSize: theme.space[31],\n        fontWeight: \"bold\",\n        marginTop: theme.space[9],\n        fontFamily: \"ArialRoundedMTBold\",\n        color: \"white\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        flexDirection: \"column\",\n        position: \"relative\",\n      }}\n    >\n      {conditionalHandler()}\n      <CounterButton\n        startCounter={startCounter}\n        stopCounter={stopCounter}\n        isActive={isActive}\n        handleFalseACtive={handleFalseACtive}\n        handleActiveTrue={handleActiveTrue}\n      />\n      <ArrowButton isActive={isActive} handleStopCounter={handleStopCounter} />\n    </Flex>\n  );\n};\n\nexport default PomodoroCounter;\n","import React from \"react\";\nimport { Box, Flex } from \"theme-ui\";\nimport useCounter from \"../../hooks/useCounter\";\nimport theme from \"../../shared/theme\";\nimport ArrowButton from \"./arrowButton\";\nimport CounterButton from \"./counterButton\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setSelectedCounter, switchCounter } from \"../../redux/actions/actions\";\n\ninterface IProps {\n  isActive: boolean;\n  handleStopCounter: () => void;\n  handleFalseACtive: () => void;\n  handleActiveTrue: () => void;\n  autoBreakSwitch: boolean;\n}\n\nconst ShortBreakCounter: React.FC<IProps> = ({\n  isActive,\n  handleStopCounter,\n  handleFalseACtive,\n  handleActiveTrue,\n  autoBreakSwitch,\n}) => {\n  const time = useSelector((state: RootState) => state.pomodoroCounter);\n  const { seconds, startCounter, minutes, stopCounter } = useCounter(\n    0,\n    time.short\n  );\n  const dispatch = useDispatch();\n  const rawCounterData = useSelector(\n    (state: RootState) => state.pomodoroCounter.data\n  );\n\n  const conditionalHandler = () => {\n    if (autoBreakSwitch) {\n      if (minutes === 0 && seconds === 0) {\n        setTimeout(() => {\n          handleFalseACtive();\n          stopCounter();\n          dispatch(switchCounter(rawCounterData[0].value));\n          dispatch(setSelectedCounter(rawCounterData[0].value));\n        }, 1000);\n      }\n      if (minutes !== 0 && seconds === 0) {\n        setTimeout(() => {\n          handleActiveTrue();\n          startCounter();\n        }, 1000);\n      }\n    } else {\n      if (minutes === 0 && seconds === 0) {\n        setTimeout(() => {\n          handleFalseACtive();\n          stopCounter();\n          dispatch(switchCounter(rawCounterData[0].value));\n          dispatch(setSelectedCounter(rawCounterData[0].value));\n        }, 1000);\n      }\n    }\n    return (\n      <Flex>\n        <Box>{minutes < 10 ? \"0\" + minutes : minutes}</Box>\n        <Box>:</Box>\n        <Box>{seconds < 10 ? \"0\" + seconds : seconds}</Box>\n      </Flex>\n    );\n  };\n\n  return (\n    <Flex\n      sx={{\n        fontSize: theme.space[31],\n        fontWeight: \"bold\",\n        marginTop: theme.space[9],\n        fontFamily: \"ArialRoundedMTBold\",\n        color: \"white\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        flexDirection: \"column\",\n        position: \"relative\",\n      }}\n    >\n      {conditionalHandler()}\n      <CounterButton\n        startCounter={startCounter}\n        stopCounter={stopCounter}\n        isActive={isActive}\n        handleFalseACtive={handleFalseACtive}\n        handleActiveTrue={handleActiveTrue}\n      />\n      <ArrowButton isActive={isActive} handleStopCounter={handleStopCounter} />\n    </Flex>\n  );\n};\n\nexport default ShortBreakCounter;\n","import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Box, Flex } from \"theme-ui\";\nimport { setSelectedCounter, switchCounter } from \"../../redux/actions/actions\";\nimport theme from \"../../shared/theme\";\nimport SwitchValueButton from \"../switchValueButton\";\nimport LongBreakCounter from \"./longBreakCounter\";\nimport PomodoroCounter from \"./pomodoroCounter\";\nimport ShortBreakCounter from \"./shortBreakCounter\";\n\nconst Counter = () => {\n  const [isActive, setIsActive] = React.useState(false);\n  const dispatch = useDispatch();\n  const autoBreakSwitch = useSelector(\n    (state: RootState) => state.pomodoroCounter.autoBreak\n  );\n  const valueSelect = useSelector(\n    (state: RootState) => state.pomodoroCounter.counter\n  );\n  const selectedCounter = useSelector(\n    (state: RootState) => state.pomodoroCounter.selectedCounter\n  );\n  const rawCounterData = useSelector(\n    (state: RootState) => state.pomodoroCounter.data\n  );\n\n  const handleActive = () => {\n    setIsActive((current) => !current);\n  };\n\n  const handleFalseACtive = () => {\n    setIsActive(false);\n  };\n\n  const handleActiveTrue = () => {\n    setIsActive(true);\n  };\n\n  const switchCounters = () => {\n    if (valueSelect === rawCounterData[0].value) {\n      return (\n        <PomodoroCounter\n          isActive={isActive}\n          handleStopCounter={handleStopCounter}\n          handleFalseACtive={handleFalseACtive}\n          handleActiveTrue={handleActiveTrue}\n        />\n      );\n    } else if (valueSelect === rawCounterData[1].value) {\n      return (\n        <ShortBreakCounter\n          isActive={isActive}\n          handleStopCounter={handleStopCounter}\n          handleFalseACtive={handleFalseACtive}\n          autoBreakSwitch={autoBreakSwitch}\n          handleActiveTrue={handleActiveTrue}\n        />\n      );\n    }\n    return (\n      <LongBreakCounter\n        isActive={isActive}\n        // handleStopCounter={handleStopCounter}\n        handleFalseACtive={handleFalseACtive}\n        handleActiveTrue={handleActiveTrue}\n        autoBreakSwitch={autoBreakSwitch}\n      />\n    );\n  };\n\n  const getValueHandler = (value: string) => () => {\n    if (isActive) {\n      const alertMessage = window.confirm(\n        \"The timer is still running, are you sure you want to switch?\"\n      );\n      if (alertMessage) {\n        dispatch(switchCounter(value));\n        dispatch(setSelectedCounter(value));\n        handleFalseACtive();\n      }\n    } else {\n      dispatch(switchCounter(value));\n      dispatch(setSelectedCounter(value));\n    }\n  };\n\n  const handleStopCounter = () => {\n    if (isActive) {\n      const alertMessage = window.confirm(\n        \"Are you sure you wanto stop the counter?\"\n      );\n      if (alertMessage && valueSelect === rawCounterData[0].value) {\n        dispatch(switchCounter(rawCounterData[1].value));\n        dispatch(setSelectedCounter(rawCounterData[1].value));\n        handleActive();\n      } else {\n        dispatch(switchCounter(rawCounterData[0].value));\n        dispatch(setSelectedCounter(rawCounterData[0].value));\n        handleActive();\n      }\n    }\n  };\n\n  return (\n    <Box\n      sx={{\n        width: theme.space[14],\n        margin: \"auto\",\n        marginTop: theme.space[15],\n        borderRadius: theme.borderRadiuss[1],\n      }}\n    >\n      <Box\n        sx={{\n          background: theme.colors.whites[9],\n          padding: [theme.space[16], theme.space[17], theme.space[18]],\n          borderRadius: theme.borderRadiuss[1],\n          marginBottom: theme.space[9],\n          width: theme.space[8],\n        }}\n      >\n        <Flex\n          sx={{\n            justifyContent: \"center\",\n            alignItems: \"center\",\n          }}\n        >\n          {rawCounterData.map((item: TCounter) => (\n            <SwitchValueButton\n              key={item.id}\n              title={item.title}\n              selected={item.value === selectedCounter}\n              onClick={getValueHandler(item.value)}\n            />\n          ))}\n        </Flex>\n        {switchCounters()}\n      </Box>\n    </Box>\n  );\n};\n\nexport default Counter;\n","import { Box, Input } from \"@theme-ui/components\";\nimport React from \"react\";\nimport theme from \"../../shared/theme\";\n\ninterface IProps {\n  value: number;\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  name: string;\n}\n\nconst LongBreakInput: React.FC<IProps> = ({ value, onChange, name }) => {\n  return (\n    <Box sx={{ width: theme.space[32] }}>\n      <Box\n        sx={{\n          display: \"block\",\n          fontSize: theme.space[33],\n          color: theme.colors.greys[0],\n          marginBottom: theme.space[34],\n        }}\n      >\n        Long Break\n      </Box>\n      <Input\n        value={value}\n        onChange={onChange}\n        name={name}\n        type=\"number\"\n        min=\"0\"\n        sx={{\n          borderRadius: theme.space[34],\n          background: theme.colors.greys[1],\n          fontSize: theme.space[3],\n          padding: theme.space[35],\n          boxShadow: \"none\",\n          border: \"none\",\n          outline: \"none\",\n          color: theme.colors.greys[2],\n          width: theme.space[8],\n          boxSizing: \"border-box\",\n          fontFamily: \"ArialRoundedMTBold\",\n        }}\n      />\n    </Box>\n  );\n};\n\nexport default LongBreakInput;\n","import { Box, Input } from \"@theme-ui/components\";\nimport React from \"react\";\nimport theme from \"../../shared/theme\";\n\ninterface IProps {\n  value: number;\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  name: string;\n}\n\nconst PomodoroInput: React.FC<IProps> = ({ value, onChange, name }) => {\n  return (\n    <Box sx={{ width: theme.space[32] }}>\n      <Box\n        sx={{\n          display: \"block\",\n          fontSize: theme.space[33],\n          color: theme.colors.greys[0],\n          marginBottom: theme.space[34],\n        }}\n      >\n        Pomodoro\n      </Box>\n      <Input\n        value={value}\n        onChange={onChange}\n        name={name}\n        type=\"number\"\n        min=\"0\"\n        sx={{\n          borderRadius: theme.space[34],\n          background: theme.colors.greys[1],\n          fontSize: theme.space[3],\n          padding: theme.space[35],\n          boxShadow: \"none\",\n          border: \"none\",\n          outline: \"none\",\n          color: theme.colors.greys[2],\n          width: theme.space[8],\n          boxSizing: \"border-box\",\n          fontFamily: \"ArialRoundedMTBold\",\n        }}\n      />\n    </Box>\n  );\n};\n\nexport default PomodoroInput;\n","import { Box, Input } from \"@theme-ui/components\";\nimport React from \"react\";\nimport theme from \"../../shared/theme\";\n\ninterface IProps {\n  value: number;\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  name: string;\n}\n\nconst ShortBreakInput: React.FC<IProps> = ({ value, onChange, name }) => {\n  return (\n    <Box sx={{ width: theme.space[32] }}>\n      <Box\n        sx={{\n          display: \"block\",\n          fontSize: theme.space[33],\n          color: theme.colors.greys[0],\n          marginBottom: theme.space[34],\n        }}\n      >\n        Short Break\n      </Box>\n      <Input\n        value={value}\n        onChange={onChange}\n        name={name}\n        type=\"number\"\n        min=\"0\"\n        sx={{\n          borderRadius: theme.space[34],\n          background: theme.colors.greys[1],\n          fontSize: theme.space[3],\n          padding: theme.space[35],\n          boxShadow: \"none\",\n          border: \"none\",\n          outline: \"none\",\n          color: theme.colors.greys[2],\n          width: theme.space[8],\n          boxSizing: \"border-box\",\n          fontFamily: \"ArialRoundedMTBold\",\n          webkitTapHighlightColor: \"transparent\",\n        }}\n      />\n    </Box>\n  );\n};\n\nexport default ShortBreakInput;\n","import { Box } from \"@theme-ui/components\";\nimport React from \"react\";\nimport theme from \"../../shared/theme\";\nimport LongBreakInput from \"./longBreakInput\";\nimport PomodoroInput from \"./pomodoroInput\";\nimport ShortBreakInput from \"./shortBreakInput\";\n\ninterface IProps {\n  values: TState;\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n}\n\nconst SettingsInputs: React.FC<IProps> = ({ values, onChange }) => {\n  return (\n    <Box\n      sx={{\n        borderTop: `${theme.space[36]} solid ${theme.colors.danger[2]}`,\n        borderBottom: `${theme.space[36]} solid ${theme.colors.danger[2]}`,\n        paddingTop: theme.space[16],\n        paddingBottom: theme.space[16],\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"center\",\n        fontFamily: \"ArialRoundedMTBold\",\n      }}\n    >\n      <Box\n        sx={{\n          color: theme.colors.greys[2],\n          fontWeight: \"bold\",\n          display: \"flex\",\n          alignItems: \"center\",\n        }}\n      >\n        Time (minutes)\n      </Box>\n      <Box\n        sx={{\n          display: \"flex\",\n          justifyContent: \"space-between\",\n          marginTop: theme.space[35],\n        }}\n      >\n        <PomodoroInput value={values.count} onChange={onChange} name=\"count\" />\n        <ShortBreakInput\n          value={values.short}\n          onChange={onChange}\n          name=\"short\"\n        />\n        <LongBreakInput value={values.long} onChange={onChange} name=\"long\" />\n      </Box>\n    </Box>\n  );\n};\n\nexport default SettingsInputs;\n","import { Switch } from \"@theme-ui/components\";\nimport React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { AUTO_BREAK } from \"../redux/actions/actionTypes\";\nimport theme from \"../shared/theme\";\n\nconst CheckboxInput = () => {\n  const autoSwitch = useSelector(\n    (state: RootState) => state.pomodoroCounter.autoBreak\n  );\n  const selectedCounter = useSelector(\n    (state: RootState) => state.pomodoroCounter.selectedCounter\n  );\n  const dispatch = useDispatch();\n\n  const handleChange = () => {\n    if (selectedCounter === \"pomodoroCounter\") {\n      dispatch({ type: AUTO_BREAK });\n    }\n  };\n\n  return (\n    <Switch\n      checked={autoSwitch}\n      onChange={handleChange}\n      sx={{\n        cursor: \"pointer\",\n        background: autoSwitch\n          ? theme.colors.success[1]\n          : theme.colors.greys[4],\n      }}\n    />\n  );\n};\n\nexport default CheckboxInput;\n","import { Box, Flex } from \"@theme-ui/components\";\nimport React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport theme from \"../../shared/theme\";\nimport CheckboxInput from \"../checkbox\";\nimport Checkbox from \"../checkbox\";\n\nconst AutoBreakStart = () => {\n  return (\n    <Flex\n      sx={{\n        borderTop: [theme.borders[0], theme.colors.danger[2]],\n        paddingBottom: theme.space[9],\n        paddingTop: theme.space[9],\n        flexDirection: \"column\",\n        justifyContent: \"center\",\n      }}\n    >\n      <Flex\n        sx={{\n          width: theme.space[8],\n          justifyContent: \"space-between\",\n          alignItems: \"center\",\n          display: \"flex\",\n        }}\n      >\n        <Flex\n          sx={{\n            color: theme.colors.greys[2],\n            fontWeight: \"bold\",\n            alignItems: \"center\",\n          }}\n        >\n          Auto start Breaks?\n        </Flex>\n        <Box>\n          <CheckboxInput />\n        </Box>\n      </Flex>\n    </Flex>\n  );\n};\n\nexport default AutoBreakStart;\n","import { Box, Button, Flex } from \"@theme-ui/components\";\nimport React from \"react\";\nimport { useModal } from \"../../Providers/ModalProvider\";\nimport theme from \"../../shared/theme\";\nimport SettingsInputs from \"./settingsInputs\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { addPomodoroTime } from \"../../redux/actions/actions\";\nimport AutoBreakStart from \"./autoBreakStart\";\n\nconst SettingsModalContent = () => {\n  const time = useSelector((state: RootState) => state.pomodoroCounter);\n  const [values, setValues] = React.useState(time);\n  const dispatch = useDispatch();\n  const { closeModalDialog } = useModal();\n  const ref = React.useRef<HTMLDivElement>(null);\n\n  const bootstrap = React.useCallback(() => {\n    setValues(time);\n  }, [time]);\n\n  React.useEffect(() => {\n    bootstrap();\n  }, [bootstrap]);\n\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = e.target;\n    setValues({\n      ...values,\n      [name]: Number(value),\n    });\n  };\n\n  const handleSubmitTimes = React.useCallback(\n    (values: TState) => {\n      if (values.count === 0 || values.short === 0 || values.long === 0) {\n      } else {\n        dispatch(addPomodoroTime(values));\n        closeModalDialog();\n      }\n    },\n    [closeModalDialog, dispatch]\n  );\n\n  const handleClickOutside = React.useCallback(\n    (e: MouseEvent) => {\n      const el = e.target;\n\n      if (el instanceof Node && ref.current && !ref.current.contains(el)) {\n        closeModalDialog();\n        handleSubmitTimes(values);\n      }\n    },\n    [closeModalDialog, handleSubmitTimes, values]\n  );\n\n  React.useEffect(() => {\n    document.addEventListener(\"mousedown\", handleClickOutside);\n    return function cleanup() {\n      document.removeEventListener(\"mousedown\", handleClickOutside);\n    };\n  }, [handleClickOutside]);\n\n  return (\n    <Box ref={ref}>\n      <Flex\n        sx={{\n          width: theme.space[8],\n          justifyContent: \"space-between\",\n          marginBottom: theme.space[3],\n          marginTop: theme.space[10],\n          fontFamily: \"ArialRoundedMTBold\",\n        }}\n      >\n        <Box\n          sx={{\n            fontSize: theme.space[3],\n            color: \"rgb(187, 187, 187)\",\n            textTransform: \"uppercase\",\n            fontWeight: \"bold\",\n          }}\n        >\n          TIMER SETTING\n        </Box>\n        <Box\n          onClick={() => handleSubmitTimes(values)}\n          sx={{\n            cursor: \"pointer\",\n            fontSize: theme.space[37],\n            width: theme.space[38],\n            height: theme.space[39],\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"flex-end\",\n          }}\n        >\n          <Box\n            sx={{\n              transform: \"rotate(45deg)\",\n              color: \"black\",\n              marginLeft: theme.space[40],\n              marginTop: theme.space[41],\n              opacity: theme.space[42],\n              zIndex: theme.space[43],\n            }}\n          >\n            +\n          </Box>\n        </Box>\n      </Flex>\n      <SettingsInputs values={values} onChange={handleInputChange} />\n      <AutoBreakStart />\n      <Box\n        style={{\n          borderTop: `${theme.space[36]} solid ${theme.colors.danger[2]}`,\n          textAlign: \"right\",\n          width: theme.space[8],\n        }}\n      >\n        <Button\n          onClick={() => handleSubmitTimes(values)}\n          sx={{\n            marginTop: theme.space[33],\n            marginBottom: theme.space[10],\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            textAlign: \"center\",\n            borderRadius: theme.borderRadiuss[0],\n            cursor: \"pointer\",\n            color: \"white\",\n            opacity: theme.opacities[2],\n            fontSize: theme.space[33],\n            minWidth: theme.space[11],\n            backgroundColor: theme.colors.greys[3],\n            border: `${theme.borders[1]} ${theme.colors.greys[3]}`,\n            display: \"inline-block\",\n          }}\n        >\n          OK\n        </Button>\n      </Box>\n    </Box>\n  );\n};\n\nexport default SettingsModalContent;\n","import React from \"react\";\nimport PopPop from \"react-poppop\";\nimport theme from \"./theme\";\ninterface IProps {\n  content?: any;\n  closeModalDialog: () => void;\n  visible: boolean;\n}\n\nconst ModalDialog: React.FC<IProps> = ({\n  visible,\n  closeModalDialog,\n  content,\n}) => {\n  return (\n    <PopPop\n      open={visible}\n      contentStyle={{\n        borderRadius: theme.borderRadiuss[2],\n        zIndex: theme.space[45],\n      }}\n      closeModalDialog={closeModalDialog}\n    >\n      {content && content}\n    </PopPop>\n  );\n};\n\nexport default ModalDialog;\n","import React, { createContext, useState } from \"react\";\nimport SettingsModalContent from \"../Components/settings/settingsModalContent\";\nimport ModalDialog from \"../shared/modal\";\n\ninterface IProps {\n  setDialog?: any;\n  closeModalDialog?: () => void;\n}\n\nconst ModalContext = createContext<IProps | null>(null);\n\nconst ModalProvider: React.FC<IProps> = ({ children }) => {\n  const [visible, setVisible] = useState(false);\n  const [content, setContent] = useState<React.FC>();\n\n  const closeModalDialog = () => {\n    setVisible(false);\n  };\n\n  const setDialog = (content: React.FC) => {\n    setVisible(true);\n    setContent(content);\n  };\n\n  return (\n    <ModalContext.Provider value={{ setDialog, closeModalDialog }}>\n      {children}\n      <ModalDialog\n        closeModalDialog={closeModalDialog}\n        visible={visible}\n        content={content}\n      />\n    </ModalContext.Provider>\n  );\n};\nexport const useModal = () =>\n  React.useContext(ModalContext) as Required<IProps>;\n\nexport const useLabelConfirmDialog = () => {\n  const { setDialog } = useModal();\n\n  return () => {\n    setDialog(<SettingsModalContent />);\n  };\n};\n\nexport default ModalProvider;\n","import { Box, Button, Flex } from \"@theme-ui/components\";\nimport React from \"react\";\nimport { useLabelConfirmDialog } from \"../../Providers/ModalProvider\";\nimport theme from \"../../shared/theme\";\nimport Icon from \"../Icon\";\n\nconst Settings = () => {\n  const openLabelConfirmDialog = useLabelConfirmDialog();\n  return (\n    <Flex\n      sx={{\n        justifyContent: \"center\",\n        alignItems: \"center\",\n      }}\n    >\n      <Button\n        onClick={openLabelConfirmDialog}\n        sx={{\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n          textAlign: \"center\",\n          borderRadius: theme.borderRadiuss[8],\n          cursor: \"pointer\",\n          opacity: theme.radii[8],\n          background: \"none rgba(255, 255, 255, 0.2)\",\n          fontSize: theme.fontSizes[0],\n          minWidth: theme.space[11],\n          border: \"none\",\n          outline: \"none\",\n          color: theme.colors.whites[8],\n          fontWeight: theme.fontWeights[5],\n          fontFamily: \"ArialRoundedMTBold\",\n        }}\n      >\n        <Icon\n          name=\"settings\"\n          style={{\n            marginRight: theme.space[0],\n            fontSize: theme.fontSizes[2],\n          }}\n        />\n        <Box>Settings</Box>\n      </Button>\n    </Flex>\n  );\n};\n\nexport default Settings;\n","import React from \"react\";\nimport { Flex } from \"theme-ui\";\nimport theme from \"../shared/theme\";\nimport Icon from \"./Icon\";\nimport Settings from \"./settings/settings\";\n\nconst Header = () => {\n  return (\n    <Flex\n      sx={{\n        width: theme.space[8],\n        height: theme.space[5],\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        fontFamily: \"ArialRoundedMTBold\",\n      }}\n    >\n      <Flex\n        sx={{\n          width: theme.space[8],\n          height: theme.space[8],\n          justifyContent: \"space-between\",\n          alignItems: \"center\",\n        }}\n      >\n        <Flex\n          sx={{\n            color: theme.colors.whites[8],\n            fontSize: theme.fontSizes[5],\n            fontWeight: theme.fontWeights[9],\n          }}\n        >\n          <Icon\n            name=\"checkCircle\"\n            style={{\n              color: theme.colors.whites[8],\n              width: theme.space[9],\n              marginRight: theme.space[0],\n            }}\n          />\n          <span>Pomocounter</span>\n        </Flex>\n        <Settings />\n      </Flex>\n    </Flex>\n  );\n};\n\nexport default Header;\n","import { useSelector } from \"react-redux\";\nimport { Flex, Box } from \"theme-ui\";\nimport theme from \"../shared/theme\";\nimport Counter from \"./Counter\";\nimport Header from \"./header\";\n\nconst Layout = () => {\n  const valueSelect = useSelector(\n    (state: RootState) => state.pomodoroCounter.counter\n  );\n  const rawCounterData = useSelector(\n    (state: RootState) => state.pomodoroCounter.data\n  );\n\n  const switchColors =\n    valueSelect === rawCounterData[0].value\n      ? theme.colors.danger[1]\n      : valueSelect === rawCounterData[1].value\n      ? theme.colors.success[2]\n      : valueSelect === rawCounterData[2].value\n      ? theme.colors.primary[1]\n      : theme.colors.danger[1];\n\n  return (\n    <Flex\n      sx={{\n        width: theme.space[8],\n        height: theme.space[12],\n        justifyContent: \"center\",\n        background: switchColors,\n      }}\n    >\n      <Box\n        style={{\n          width: theme.space[13],\n        }}\n      >\n        <Header />\n        <Box\n          sx={{\n            margin: \"auto\",\n            borderTop: `${theme.borders[0]} solid ${theme.colors.blacks[12]}`,\n          }}\n        >\n          <Box\n            sx={{\n              textAlign: \"center\",\n              width: theme.space[8],\n            }}\n          >\n            <Counter />\n          </Box>\n        </Box>\n      </Box>\n    </Flex>\n  );\n};\n\nexport default Layout;\n","import React from \"react\";\nimport { ThemeProvider } from \"styled-components\";\nimport theme from \"../shared/theme\";\n\ninterface IProps {\n  children: any;\n}\n\nconst Theme: React.FC<IProps> = ({ children }) => {\n  return <ThemeProvider theme={theme}>{children}</ThemeProvider>;\n};\nexport default Theme;\n","import Layout from \"./Components/layout\";\nimport ModalProvider from \"./Providers/ModalProvider\";\nimport Theme from \"./Providers/Theme\";\n\nconst App = () => {\n  return (\n    <ModalProvider>\n      <Theme>\n        <Layout />\n      </Theme>\n    </ModalProvider>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { items } from \"../../shared/mockData\";\nimport {\n  ADD_POMODORO_TIME,\n  AUTO_BREAK,\n  FETCH_ITEMS,\n  SET_SELECTED_COUNTER,\n  SWITCH_COUNTER,\n} from \"./../actions/actionTypes\";\n\nconst initialState: TState = {\n  count: 25,\n  short: 5,\n  long: 15,\n  autoBreak: false,\n  counter: \"pomodoroCounter\",\n  selectedCounter: \"pomodoroCounter\",\n  data: items,\n};\n\nconst pomodoroCounter = (state = initialState, action: Action) => {\n  switch (action.type) {\n    case ADD_POMODORO_TIME:\n      return {\n        ...state,\n        ...(action.payload as {}),\n      };\n\n    case AUTO_BREAK:\n      return {\n        ...state,\n        autoBreak: !state.autoBreak,\n      };\n\n    case SWITCH_COUNTER:\n      return {\n        ...state,\n        counter: action.payload,\n      };\n\n    case SET_SELECTED_COUNTER:\n      return {\n        ...state,\n        selectedCounter: action.payload,\n      };\n\n    case FETCH_ITEMS:\n      return {\n        ...state,\n        data: state.data,\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default pomodoroCounter;\n","export const items: TCounter[] = [\n  {\n    title: \"Pomodoro\",\n    value: \"pomodoroCounter\",\n    id: 1,\n  },\n  {\n    title: \"Short Break\",\n    value: \"shortBreakCounter\",\n    id: 2,\n  },\n  {\n    title: \"Long Break\",\n    value: \"longBreakCounter\",\n    id: 3,\n  },\n];\n","import { combineReducers } from \"redux\";\n\nimport pomodoroCounter from \"./pomodoroCounterReducer\";\n\nconst rootReducer = combineReducers({\n  pomodoroCounter,\n});\n\nexport default rootReducer;\n","import { applyMiddleware, createStore } from \"redux\";\nimport { persistStore, persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\"; // defaults to localStorage for web\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"../reducers/rootReducer\";\n\nconst persistConfig = {\n  key: \"root\",\n  storage,\n};\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nexport default () => {\n  const store = createStore(\n    persistedReducer,\n    composeWithDevTools(applyMiddleware(thunk))\n  );\n  const persistor = persistStore(store);\n  return { store, persistor };\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { Provider } from \"react-redux\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport configureStore from \"./redux/store/configureStore\";\n\nconst { store, persistor } = configureStore();\n\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate loading={null} persistor={persistor}>\n      <React.StrictMode>\n        <App />\n      </React.StrictMode>\n    </PersistGate>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}