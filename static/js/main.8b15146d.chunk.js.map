{"version":3,"sources":["hooks/useToggleContent.tsx","shared/theme.ts","hooks/useCounter.tsx","Components/Icon.tsx","Components/Counter/arrowButton.tsx","Components/Counter/counterButton.tsx","Components/Counter/longBreakCounter.tsx","Components/Counter/pomodoroCounter.tsx","Components/Counter/shortBreakCounter.tsx","Components/Counter/index.tsx","Components/header.tsx","Components/layoutContent.tsx","Components/layout.tsx","Providers/Theme.tsx","App.tsx","reportWebVitals.js","index.tsx"],"names":["useToggleContent","React","useState","valueSelect","setValueSelect","toggleContent","content","theme","space","fontSizes","fontWeights","lineHeights","borderRadiuss","borders","opacities","radii","colors","info","primary","danger","success","warning","blacks","whites","useCounter","initSeconds","initMinutes","seconds","setSeconds","minutes","setMinutes","start","setStart","useEffect","interval","setInterval","clearInterval","startCounter","IconNamesMap","checkCircle","settings","rightArrow","minus","Icon","name","color","style","className","ArrowButton","isActive","handleStopCounter","onClick","sx","cursor","border","width","height","alignItems","justifyContent","display","fontSize","position","right","top","background","marginTop","transform","marginLeft","CounterButton","handleActive","switchColors","outline","margin","borderRadius","fontFamily","fontWeight","backgroundColor","LongBreakCounter","flexDirection","PomodoroCounter","ShortBreakCounter","Counter","setIsActive","current","getValueHandler","value","window","confirm","padding","marginBottom","opacity","Header","marginRight","textAlign","minWidth","LayoutContent","borderTop","Layout","Theme","children","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8b15146d.chunk.js","sourcesContent":["import React from \"react\";\n\nconst useToggleContent = () => {\n  const [valueSelect, setValueSelect] =\n    React.useState<string>(\"pomodoroCounter\");\n\n  const toggleContent = (content: string) => {\n    setValueSelect(content);\n  };\n\n  return {\n    valueSelect,\n    setValueSelect,\n    toggleContent,\n  };\n};\nexport default useToggleContent;\n","const theme = {\n  space: [\n    4, //0\n    8, //1\n    12, //2\n    16, //3\n    32, //4\n    60, //5\n    64, //6\n    128, //7\n    \"100%\", //8\n    20, //9\n    10, //10\n    70, //11\n    \"100vh\", //12\n    620, //13\n    \"480px\", //14\n    40, //15\n    \"20px\", //16\n    \"0px\", //17\n    \"30px\", //18\n    \"2px\", //19\n    \"12px\", //20\n    28, //21\n    55, //22\n    200, //23\n  ],\n  fontSizes: [13, 16, 18, 24, 28, 20, 22],\n  fontWeights: [100, 200, 300, 400, 500, 600, 700, 800, 900, \"bold\"],\n  lineHeights: [1.5, 1.8, 2, 2.5],\n  borderRadiuss: [4, 6],\n  borders: [\n    \"1px solid\", //0\n    \"2px solid\", //1\n    \"4px solid\", //2\n    \"6px solid\", //3\n    \"8px solid\", //4\n    \"10px solid\", //5\n  ],\n  opacities: [0, 1],\n  radii: [0, 2, 4, 6, 8, 10, 12, 16, 0.9],\n  colors: {\n    info: \"#1ecbe1\",\n    primary: \"#1676e9\",\n    danger: [\"#e72918\", \"rgb(219, 82, 77)\"],\n    success: \"#6bc33c\",\n    warning: \"#fff900\",\n    blacks: [\n      \"rgba(0,0,0)\", //0\n      \"rgba(0,0,0,.1)\", //1\n      \"rgba(0,0,0,.2)\", //2\n      \"rgba(0,0,0,.25)\", //3\n      \"rgba(0,0,0,.3)\", //4\n      \"rgba(0,0,0,.4)\", //5\n      \"rgba(0,0,0,.5)\", //6\n      \"rgba(0,0,0,.6)\", //7\n      \"rgba(0,0,0,.7)\", //8\n      \"rgba(0,0,0,.8)\", //9\n      \"rgba(0,0,0,.9)\", //10\n      \"rgba(0, 0, 0, 0.15)\", //11\n      \"rgba(0, 0, 0, 0.1)\", //12\n    ],\n    whites: [\n      \"rgba(255,255,255,.1)\", //0\n      \"rgba(255,255,255,.2)\", //1\n      \"rgba(255,255,255,.3)\", //2\n      \"rgba(255,255,255,.4)\", //3\n      \"rgba(255,255,255,.5)\", //4\n      \"rgba(255,255,255,.6)\", //5\n      \"rgba(255,255,255,.7)\", //6\n      \"rgba(255,255,255,.8)\", //7\n      \"rgba(255,255,255,.9)\", //8\n      \"rgba(255, 255, 255, 0.1)\", //9\n    ],\n  },\n};\nexport default theme;\n","import React from \"react\";\n\nconst useCounter = (initSeconds: number, initMinutes: number) => {\n  const [seconds, setSeconds] = React.useState(initSeconds);\n  const [minutes, setMinutes] = React.useState(initMinutes);\n  const [start, setStart] = React.useState<boolean>(false);\n\n  const startCounter = () => {\n    setStart(!start);\n  };\n\n  const resetCounter = () => {\n    setSeconds(5);\n    setMinutes(1);\n    setStart(false);\n  };\n\n  React.useEffect(() => {\n    var interval: any = null;\n    if (start) {\n      interval = setInterval(() => {\n        setSeconds((seconds: number) => seconds - 1);\n        setMinutes((minutes: number) => minutes);\n      }, 1000);\n    }\n    if (start && minutes !== 0 && seconds === 0) {\n      setSeconds(59);\n      setMinutes((minutes: number) => minutes - 1);\n    }\n    if (start && minutes === 0 && seconds === 0) {\n      clearInterval(interval);\n      setStart(!start);\n      setSeconds(5);\n      setMinutes(1);\n    }\n    return () => clearInterval(interval);\n  }, [start, seconds, minutes]);\n\n  return { seconds, minutes, start, startCounter };\n};\n\nexport default useCounter;\n","import React from \"react\";\nimport { Box } from \"theme-ui\";\n\nconst IconNamesMap = {\n  checkCircle: \"fa fa-check-circle\",\n  settings: \"fa fa-cog\",\n  rightArrow: \"fa fa-caret-right\",\n  minus: \"fa fa-minus\",\n};\n\nexport type IconName = keyof typeof IconNamesMap;\n\ninterface IProps {\n  name: IconName;\n  style?: React.CSSProperties | undefined;\n  color?: string;\n  fontSize?: number;\n}\n\nconst Icon: React.FC<IProps> = ({ name, color, style }) => {\n  return (\n    <Box>\n      <i className={IconNamesMap[name]} color={color} style={style} />\n    </Box>\n  );\n};\nexport default Icon;\n","import { Box, Button, Flex } from \"@theme-ui/components\";\nimport React from \"react\";\nimport Icon from \"../Icon\";\n\ninterface IProps {\n  isActive: boolean;\n  handleStopCounter: () => void;\n}\n\nconst ArrowButton: React.FC<IProps> = ({ isActive, handleStopCounter }) => {\n  return (\n    <Box>\n      {isActive ? (\n        <Button\n          onClick={handleStopCounter}\n          sx={{\n            cursor: \"pointer\",\n            border: \"none\",\n            width: 58,\n            height: 58,\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            display: \"flex\",\n            fontSize: 35,\n            position: \"absolute\",\n            right: 540,\n            top: 335,\n            background: \"transparent\",\n          }}\n        >\n          <Icon name=\"rightArrow\" />\n          <Box\n            sx={{\n              width: 28,\n              height: 28,\n              fontSize: 23,\n              marginTop: 0,\n              alignItems: \"center\",\n              justifyContent: \"center\",\n              display: \"flex\",\n              transform: \"rotate(90deg)\",\n              position: \"absolute\",\n              marginLeft: 3,\n            }}\n          >\n            <Icon name=\"minus\" />\n          </Box>\n        </Button>\n      ) : null}\n    </Box>\n  );\n};\n\nexport default ArrowButton;\n","import { Button } from \"@theme-ui/components\";\nimport React from \"react\";\nimport theme from \"../../shared/theme\";\n\ninterface IProps {\n  valueSelect: string;\n  startCounter: any;\n  isActive: boolean;\n  handleActive: () => void;\n}\n\nconst CounterButton: React.FC<IProps> = ({\n  valueSelect,\n  startCounter,\n  isActive,\n  handleActive,\n}) => {\n  const switchColors =\n    valueSelect === \"pomodoroCounter\"\n      ? theme.colors.danger[1]\n      : valueSelect === \"shortBreakCounter\"\n      ? \"rgb(70, 142, 145)\"\n      : valueSelect === \"longBreakCounter\"\n      ? \"rgb(67, 126, 168)\"\n      : theme.colors.danger[1];\n\n  const handleStartCounter = () => {\n    startCounter();\n    handleActive();\n  };\n\n  return (\n    <Button\n      onClick={handleStartCounter}\n      sx={{\n        cursor: \"pointer\",\n        border: \"none\",\n        outline: \"none\",\n        margin: \"20px 0px 0px\",\n        borderRadius: theme.fontSizes[0],\n        fontFamily: \"ArialRoundedMTBold\",\n        fontSize: theme.fontSizes[6],\n        height: theme.space[22],\n        color: switchColors,\n        fontWeight: theme.fontWeights[9],\n        width: theme.space[23],\n        backgroundColor: theme.colors.whites[8],\n      }}\n    >\n      {isActive ? \"STOP\" : \"START\"}\n    </Button>\n  );\n};\n\nexport default CounterButton;\n","import React from \"react\";\nimport { Box, Flex } from \"theme-ui\";\nimport useCounter from \"../../hooks/useCounter\";\nimport ArrowButton from \"./arrowButton\";\nimport CounterButton from \"./counterButton\";\n\ninterface IProps {\n  valueSelect: string;\n  handleActive: () => void;\n  isActive: boolean;\n  handleStopCounter: () => void;\n}\n\nconst LongBreakCounter: React.FC<IProps> = ({\n  valueSelect,\n  handleActive,\n  isActive,\n  handleStopCounter,\n}) => {\n  const { seconds, startCounter, minutes } = useCounter(0, 15);\n\n  return (\n    <Flex\n      sx={{\n        fontSize: 120,\n        fontWeight: \"bold\",\n        marginTop: 20,\n        fontFamily: \"ArialRoundedMTBold\",\n        color: \"white\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        flexDirection: \"column\",\n      }}\n    >\n      <Flex>\n        <Box>{minutes < 10 ? \"0\" + minutes : minutes}</Box>\n        <Box>:</Box>\n        <Box>{seconds < 10 ? \"0\" + seconds : seconds}</Box>\n      </Flex>\n      <CounterButton\n        startCounter={startCounter}\n        valueSelect={valueSelect}\n        isActive={isActive}\n        handleActive={handleActive}\n      />\n      <ArrowButton isActive={isActive} handleStopCounter={handleStopCounter} />\n    </Flex>\n  );\n};\n\nexport default LongBreakCounter;\n","import React from \"react\";\nimport { Box, Flex } from \"theme-ui\";\nimport useCounter from \"../../hooks/useCounter\";\nimport ArrowButton from \"./arrowButton\";\nimport CounterButton from \"./counterButton\";\n\ninterface IProps {\n  valueSelect: string;\n  isActive: boolean;\n  handleActive: () => void;\n  handleStopCounter: () => void;\n}\n\nconst PomodoroCounter: React.FC<IProps> = ({\n  valueSelect,\n  isActive,\n  handleActive,\n  handleStopCounter,\n}) => {\n  const { seconds, minutes, startCounter }: any = useCounter(0, 25);\n\n  return (\n    <Flex\n      sx={{\n        fontSize: 120,\n        fontWeight: \"bold\",\n        marginTop: 20,\n        fontFamily: \"ArialRoundedMTBold\",\n        color: \"white\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        flexDirection: \"column\",\n      }}\n    >\n      <Flex>\n        <Box>{minutes < 10 ? \"0\" + minutes : minutes}</Box>\n        <Box>:</Box>\n        <Box>{seconds < 10 ? \"0\" + seconds : seconds}</Box>\n      </Flex>\n      <CounterButton\n        startCounter={startCounter}\n        valueSelect={valueSelect}\n        isActive={isActive}\n        handleActive={handleActive}\n      />\n      <ArrowButton isActive={isActive} handleStopCounter={handleStopCounter} />\n    </Flex>\n  );\n};\n\nexport default PomodoroCounter;\n","import React from \"react\";\nimport { Box, Flex } from \"theme-ui\";\nimport useCounter from \"../../hooks/useCounter\";\nimport ArrowButton from \"./arrowButton\";\nimport CounterButton from \"./counterButton\";\n\ninterface IProps {\n  valueSelect: string;\n  handleActive: () => void;\n  isActive: boolean;\n  handleStopCounter: () => void;\n}\n\nconst ShortBreakCounter: React.FC<IProps> = ({\n  valueSelect,\n  handleActive,\n  isActive,\n  handleStopCounter,\n}) => {\n  const { seconds, startCounter, minutes } = useCounter(0, 5);\n\n  return (\n    <Flex\n      sx={{\n        fontSize: 120,\n        fontWeight: \"bold\",\n        marginTop: 20,\n        fontFamily: \"ArialRoundedMTBold\",\n        color: \"white\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        flexDirection: \"column\",\n      }}\n    >\n      <Flex>\n        <Box>{minutes < 10 ? \"0\" + minutes : minutes}</Box>\n        <Box>:</Box>\n        <Box>{seconds < 10 ? \"0\" + seconds : seconds}</Box>\n      </Flex>\n      <CounterButton\n        startCounter={startCounter}\n        valueSelect={valueSelect}\n        isActive={isActive}\n        handleActive={handleActive}\n      />\n      <ArrowButton isActive={isActive} handleStopCounter={handleStopCounter} />\n    </Flex>\n  );\n};\n\nexport default ShortBreakCounter;\n","import React from \"react\";\nimport { Box, Button, Flex } from \"theme-ui\";\nimport theme from \"../../shared/theme\";\nimport LongBreakCounter from \"./longBreakCounter\";\nimport PomodoroCounter from \"./pomodoroCounter\";\nimport ShortBreakCounter from \"./shortBreakCounter\";\n\ninterface IProps {\n  valueSelect: string;\n  toggleContent: (content: string) => void;\n}\n\nconst Counter: React.FC<IProps> = ({ valueSelect, toggleContent }) => {\n  const [isActive, setIsActive] = React.useState<boolean>(false);\n  const switchCounters = () => {\n    if (valueSelect === \"pomodoroCounter\") {\n      return (\n        <PomodoroCounter\n          valueSelect={valueSelect}\n          isActive={isActive}\n          handleActive={handleActive}\n          handleStopCounter={handleStopCounter}\n        />\n      );\n    } else if (valueSelect === \"shortBreakCounter\") {\n      return (\n        <ShortBreakCounter\n          valueSelect={valueSelect}\n          handleActive={handleActive}\n          isActive={isActive}\n          handleStopCounter={handleStopCounter}\n        />\n      );\n    }\n    return (\n      <LongBreakCounter\n        valueSelect={valueSelect}\n        handleActive={handleActive}\n        isActive={isActive}\n        handleStopCounter={handleStopCounter}\n      />\n    );\n  };\n\n  const handleActive = () => {\n    setIsActive((current) => !current);\n  };\n\n  const getValueHandler = (value: string) => () => {\n    if (isActive) {\n      const alertMessage = window.confirm(\n        \"The timer is still running, are you sure you want to switch?\"\n      );\n      if (alertMessage) {\n        toggleContent(value);\n        handleActive();\n      }\n    } else {\n      toggleContent(value);\n    }\n  };\n\n  const handleStopCounter = () => {\n    if (isActive) {\n      const alertMessage = window.confirm(\n        \"Are you sure you wanto stop the counter?\"\n      );\n      if (alertMessage && valueSelect === \"pomodoroCounter\") {\n        toggleContent(\"shortBreakCounter\");\n        handleActive();\n      } else {\n        toggleContent(\"pomodoroCounter\");\n        handleActive();\n      }\n    }\n  };\n\n  return (\n    <Box\n      sx={{\n        width: theme.space[14],\n        margin: \"auto\",\n        marginTop: theme.space[15],\n        borderRadius: theme.borderRadiuss[1],\n      }}\n    >\n      <Box\n        sx={{\n          background: theme.colors.whites[9],\n          padding: [theme.space[16], theme.space[17], theme.space[18]],\n          borderRadius: theme.borderRadiuss[1],\n          marginBottom: theme.space[9],\n          width: theme.space[8],\n        }}\n      >\n        <Flex\n          sx={{\n            justifyContent: \"center\",\n            alignItems: \"center\",\n          }}\n        >\n          <Button\n            onClick={getValueHandler(\"pomodoroCounter\")}\n            sx={{\n              border: \"none\",\n              outline: \"none\",\n              borderRadius: theme.borderRadiuss[0],\n              fontFamily: \"ArialRoundedMTBold\",\n              fontSize: theme.fontSizes[1],\n              height: theme.space[21],\n              cursor: \"pointer\",\n              background:\n                valueSelect === \"pomodoroCounter\"\n                  ? theme.colors.blacks[11]\n                  : \"transparent\",\n              color: theme.colors.whites[8],\n              opacity: theme.opacities[1],\n              fontWeight: theme.fontWeights[9],\n              display: \"flex\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n            }}\n          >\n            Pomodoro\n          </Button>\n          <Button\n            onClick={getValueHandler(\"shortBreakCounter\")}\n            sx={{\n              border: \"none\",\n              color: theme.colors.whites[8],\n              borderRadius: theme.borderRadiuss[0],\n              fontFamily: \"ArialRoundedMTBold\",\n              fontSize: theme.fontSizes[1],\n              height: theme.space[21],\n              cursor: \"pointer\",\n              fontWeight: theme.fontWeights[9],\n              background:\n                valueSelect === \"shortBreakCounter\"\n                  ? theme.colors.blacks[11]\n                  : \"transparent\",\n              display: \"flex\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n            }}\n          >\n            Short Break\n          </Button>\n          <Button\n            onClick={getValueHandler(\"longBreakCounter\")}\n            sx={{\n              border: \"none\",\n              outline: \"none\",\n              color: theme.colors.whites[8],\n              borderRadius: theme.borderRadiuss[0],\n              fontFamily: \"ArialRoundedMTBold\",\n              fontSize: theme.fontSizes[1],\n              height: theme.space[21],\n              cursor: \"pointer\",\n              background:\n                valueSelect === \"longBreakCounter\"\n                  ? theme.colors.blacks[11]\n                  : \"transparent\",\n              fontWeight: theme.fontWeights[9],\n              display: \"flex\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n            }}\n          >\n            Long Break\n          </Button>\n        </Flex>\n        {switchCounters()}\n      </Box>\n    </Box>\n  );\n};\n\nexport default Counter;\n","import React from \"react\";\nimport { Box, Button, Flex } from \"theme-ui\";\nimport theme from \"../shared/theme\";\nimport Icon from \"./Icon\";\n\nconst Header = () => {\n  return (\n    <Flex\n      sx={{\n        width: theme.space[8],\n        height: theme.space[5],\n        justifyContent: \"center\",\n        alignItems: \"center\",\n      }}\n    >\n      <Flex\n        sx={{\n          width: theme.space[8],\n          height: theme.space[8],\n          justifyContent: \"space-between\",\n          alignItems: \"center\",\n        }}\n      >\n        <Flex\n          sx={{\n            color: theme.colors.whites[8],\n            fontSize: theme.fontSizes[5],\n            fontWeight: theme.fontWeights[9],\n          }}\n        >\n          <Icon\n            name=\"checkCircle\"\n            style={{\n              color: theme.colors.whites[8],\n              width: theme.space[9],\n              marginRight: theme.space[0],\n            }}\n          />\n          <span>Pomocounter</span>\n        </Flex>\n        <Flex\n          sx={{\n            justifyContent: \"center\",\n            alignItems: \"center\",\n          }}\n        >\n          <Button\n            sx={{\n              display: \"flex\",\n              alignItems: \"center\",\n              justifyContent: \"center\",\n              textAlign: \"center\",\n              borderRadius: theme.borderRadiuss[8],\n              cursor: \"pointer\",\n              opacity: theme.radii[8],\n              background: \"none rgba(255, 255, 255, 0.2)\",\n              fontSize: theme.fontSizes[0],\n              minWidth: theme.space[11],\n              border: \"none\",\n              outline: \"none\",\n              color: theme.colors.whites[8],\n              fontWeight: theme.fontWeights[5],\n            }}\n          >\n            <Icon\n              name=\"settings\"\n              style={{\n                marginRight: theme.space[0],\n                fontSize: theme.fontSizes[2],\n              }}\n            />\n            <Box>Settings</Box>\n          </Button>\n        </Flex>\n      </Flex>\n    </Flex>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\nimport { Box } from \"theme-ui\";\nimport theme from \"../shared/theme\";\nimport Counter from \"./Counter\";\nimport Header from \"./header\";\n\ninterface IProps {\n  valueSelect: string;\n  toggleContent: (content: string) => void;\n}\n\nconst LayoutContent: React.FC<IProps> = ({ valueSelect, toggleContent }) => {\n  return (\n    <Box\n      style={{\n        width: theme.space[13],\n      }}\n    >\n      <Header />\n      <Box\n        sx={{\n          padding: \"0px 12px\",\n          margin: \"auto\",\n          borderTop: \"1px solid rgba(0, 0, 0, 0.1)\",\n        }}\n      >\n        <Box\n          sx={{\n            textAlign: \"center\",\n            width: \"100%\",\n          }}\n        >\n          <Counter valueSelect={valueSelect} toggleContent={toggleContent} />\n        </Box>\n      </Box>\n    </Box>\n  );\n};\n\nexport default LayoutContent;\n","import { Flex } from \"theme-ui\";\nimport useToggleContent from \"../hooks/useToggleContent\";\nimport theme from \"../shared/theme\";\nimport LayoutContent from \"./layoutContent\";\n\nconst Layout = () => {\n  const { valueSelect, toggleContent } = useToggleContent();\n\n  const switchColors =\n    valueSelect === \"pomodoroCounter\"\n      ? theme.colors.danger[1]\n      : valueSelect === \"shortBreakCounter\"\n      ? \"rgb(70, 142, 145)\"\n      : valueSelect === \"longBreakCounter\"\n      ? \"rgb(67, 126, 168)\"\n      : theme.colors.danger[1];\n\n  return (\n    <Flex\n      sx={{\n        width: theme.space[8],\n        height: theme.space[12],\n        justifyContent: \"center\",\n        background: switchColors,\n      }}\n    >\n      <LayoutContent valueSelect={valueSelect} toggleContent={toggleContent} />\n    </Flex>\n  );\n};\n\nexport default Layout;\n","import React from \"react\";\nimport { ThemeProvider } from \"styled-components\";\nimport theme from \"../shared/theme\";\n\ninterface IProps {\n  children: any;\n}\n\nconst Theme: React.FC<IProps> = ({ children }) => {\n  return <ThemeProvider theme={theme}>{children}</ThemeProvider>;\n};\nexport default Theme;\n","import Layout from \"./Components/layout\";\nimport Theme from \"./Providers/Theme\";\n\nconst App = () => {\n  return (\n    <Theme>\n      <Layout />\n    </Theme>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}