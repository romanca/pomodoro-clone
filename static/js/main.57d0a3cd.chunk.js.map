{"version":3,"sources":["hooks/useToggleContent.tsx","shared/theme.ts","hooks/useCounter.tsx","Components/Icon.tsx","Components/Counter/arrowButton.tsx","Components/Counter/counterButton.tsx","Components/Counter/longBreakCounter.tsx","Components/Counter/pomodoroCounter.tsx","Components/Counter/shortBreakCounter.tsx","Components/Counter/index.tsx","Components/settings/longBreakInput.tsx","Components/settings/pomodoroInput.tsx","Components/settings/shortBreakInput.tsx","Components/settings/settingsInputs.tsx","redux/actions/actionTypes.ts","Components/checkbox.tsx","Components/settings/autoBreakStart.tsx","Components/settings/settingsModalContent.tsx","redux/actions/actions.ts","shared/modal.tsx","Providers/ModalProvider.tsx","Components/settings/settings.tsx","Components/header.tsx","Components/layoutContent.tsx","Components/layout.tsx","Providers/Theme.tsx","App.tsx","reportWebVitals.js","redux/reducers/pomodoroCounterReducer.ts","redux/reducers/rootReducer.ts","redux/store/configureStore.ts","index.tsx"],"names":["useToggleContent","React","useState","valueSelect","setValueSelect","useEffect","toggleContent","content","theme","space","fontSizes","fontWeights","lineHeights","borderRadiuss","borders","opacities","radii","colors","info","primary","danger","success","warning","blacks","whites","greys","useCounter","initSeconds","initMinutes","seconds","setSeconds","minutes","setMinutes","start","setStart","interval","setInterval","clearInterval","startCounter","stopCounter","IconNamesMap","checkCircle","settings","rightArrow","minus","cross","Icon","name","color","style","className","ArrowButton","isActive","handleStopCounter","onClick","sx","cursor","border","width","height","alignItems","justifyContent","display","fontSize","position","right","top","background","marginTop","transform","marginLeft","CounterButton","handleFalseACtive","handleActiveTrue","switchColors","outline","borderRadius","fontFamily","fontWeight","backgroundColor","LongBreakCounter","handleActive","time","useSelector","state","pomodoroCounter","long","flexDirection","conditionalHandler","PomodoroCounter","count","setTimeout","ShortBreakCounter","autoBreakSwitch","short","Counter","setIsActive","autoBreak","current","getValueHandler","value","window","confirm","margin","padding","marginBottom","opacity","LongBreakInput","onChange","type","min","boxShadow","boxSizing","PomodoroInput","ShortBreakInput","webkitTapHighlightColor","SettingsInputs","values","borderTop","borderBottom","paddingTop","paddingBottom","ADD_POMODORO_TIME","AUTO_BREAK","CheckboxInput","autoSwitch","dispatch","useDispatch","checked","AutoBreakStart","SettingsModalContent","setValues","closeModalDialog","useModal","ref","useRef","bootstrap","useCallback","handleSubmitTimes","payload","handleClickOutside","e","el","target","Node","contains","document","addEventListener","removeEventListener","textTransform","zIndex","Number","textAlign","minWidth","ModalDialog","visible","open","contentStyle","ModalContext","createContext","useContext","ModalProvider","children","setVisible","setContent","Provider","setDialog","Settings","openLabelConfirmDialog","useLabelConfirmDialog","marginRight","Header","LayoutContent","Layout","Theme","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","action","rootReducer","combineReducers","persistConfig","key","storage","persistedReducer","persistReducer","store","createStore","composeWithDevTools","applyMiddleware","thunk","persistor","persistStore","configureStore","ReactDOM","render","loading","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.57d0a3cd.chunk.js","sourcesContent":["import React from \"react\";\n\nconst useToggleContent = () => {\n  const [valueSelect, setValueSelect] =\n    React.useState<string>(\"pomodoroCounter\");\n\n  React.useEffect(() => {\n    setValueSelect(\"pomodoroCounter\");\n  }, []);\n\n  const toggleContent = (content: string) => {\n    setValueSelect(content);\n  };\n\n  return {\n    valueSelect,\n    setValueSelect,\n    toggleContent,\n  };\n};\nexport default useToggleContent;\n","const theme = {\n  space: [\n    4, //0\n    8, //1\n    12, //2\n    16, //3\n    32, //4\n    60, //5\n    64, //6\n    128, //7\n    \"100%\", //8\n    20, //9\n    10, //10\n    70, //11\n    \"100vh\", //12\n    620, //13\n    \"480px\", //14\n    40, //15\n    \"20px\", //16\n    \"0px\", //17\n    \"30px\", //18\n    \"2px\", //19\n    \"12px\", //20\n    28, //21\n    55, //22\n    200, //23\n    \"58px\", //24\n    \"35px\", //25\n    540, //26\n    335, //27\n    23, //28\n    0, //29\n    3, //30\n    120, //31\n    \"98px\", //32\n    \"14px\", //33\n    \"4px\", //34\n    \"10px\", //35\n    \"1px\", //36\n    35, //37\n    30, //38\n    25, //39\n    15, //40\n    -10, //41\n    0.2, //42\n    2147483647, //43\n    \"3px\", //44\n    2000, //45\n    300, //46\n  ],\n  fontSizes: [13, 16, 18, 24, 28, 20, 22],\n  fontWeights: [100, 200, 300, 400, 500, 600, 700, 800, 900, \"bold\"],\n  lineHeights: [1.5, 1.8, 2, 2.5],\n  borderRadiuss: [4, 6, 3, 50],\n  borders: [\n    \"1px solid\", //0\n    \"2px solid\", //1\n    \"4px solid\", //2\n    \"6px solid\", //3\n    \"8px solid\", //4\n    \"10px solid\", //5\n  ],\n  opacities: [0, 1, 0.9],\n  radii: [0, 2, 4, 6, 8, 10, 12, 16, 0.9],\n  colors: {\n    info: \"#1ecbe1\",\n    primary: \"#1676e9\",\n    danger: [\"#e72918\", \"rgb(219, 82, 77)\", \"rgba(182, 165, 166, 0.2)\"],\n    success: [\"#6bc33c\", \"rgba(132, 199, 51, 0.8)\"],\n    warning: \"#fff900\",\n    blacks: [\n      \"rgba(0,0,0)\", //0\n      \"rgba(0,0,0,.1)\", //1\n      \"rgba(0,0,0,.2)\", //2\n      \"rgba(0,0,0,.25)\", //3\n      \"rgba(0,0,0,.3)\", //4\n      \"rgba(0,0,0,.4)\", //5\n      \"rgba(0,0,0,.5)\", //6\n      \"rgba(0,0,0,.6)\", //7\n      \"rgba(0,0,0,.7)\", //8\n      \"rgba(0,0,0,.8)\", //9\n      \"rgba(0,0,0,.9)\", //10\n      \"rgba(0, 0, 0, 0.15)\", //11\n      \"rgba(0, 0, 0, 0.1)\", //12\n    ],\n    whites: [\n      \"rgba(255,255,255,.1)\", //0\n      \"rgba(255,255,255,.2)\", //1\n      \"rgba(255,255,255,.3)\", //2\n      \"rgba(255,255,255,.4)\", //3\n      \"rgba(255,255,255,.5)\", //4\n      \"rgba(255,255,255,.6)\", //5\n      \"rgba(255,255,255,.7)\", //6\n      \"rgba(255,255,255,.8)\", //7\n      \"rgba(255,255,255,.9)\", //8\n      \"rgba(255, 255, 255, 0.1)\", //9\n    ],\n    greys: [\n      \"rgb(187, 187, 187)\", //0\n      \"rgb(239, 239, 239)\", //1\n      \"rgb(85, 85, 85)\", //2\n      \"rgb(34, 34, 34)\", //3\n      \"rgb(204, 204, 204)\", //4\n    ],\n  },\n};\nexport default theme;\n","import React from \"react\";\n\nconst useCounter = (initSeconds: number, initMinutes: number) => {\n  const [seconds, setSeconds] = React.useState(initSeconds);\n  const [minutes, setMinutes] = React.useState(initMinutes);\n  const [start, setStart] = React.useState<boolean>(false);\n\n  const startCounter = () => {\n    setStart(true);\n  };\n\n  const stopCounter = () => {\n    setStart(false);\n  };\n\n  React.useEffect(() => {\n    setSeconds(initSeconds);\n    setMinutes(initMinutes);\n  }, [initMinutes, initSeconds]);\n\n  React.useEffect(() => {\n    var interval: any = null;\n    if (start) {\n      interval = setInterval(() => {\n        setSeconds((seconds: number) => seconds - 1);\n        setMinutes((minutes: number) => minutes);\n      }, 1000);\n    }\n    if (start && minutes !== 0 && seconds === 0) {\n      setSeconds(59);\n      setMinutes((minutes: number) => minutes - 1);\n    }\n    if (start && minutes === 0 && seconds === 0) {\n      clearInterval(interval);\n      setStart(false);\n      setSeconds(0);\n      setMinutes(0);\n    }\n    return () => clearInterval(interval);\n  }, [start, seconds, minutes]);\n\n  return {\n    seconds,\n    minutes,\n    start,\n    startCounter,\n    stopCounter,\n  };\n};\n\nexport default useCounter;\n","import React from \"react\";\nimport { Box } from \"theme-ui\";\n\nconst IconNamesMap = {\n  checkCircle: \"fa fa-check-circle\",\n  settings: \"fa fa-cog\",\n  rightArrow: \"fa fa-caret-right\",\n  minus: \"fa fa-minus\",\n  cross: \"fa fa-times\",\n};\n\nexport type IconName = keyof typeof IconNamesMap;\n\ninterface IProps {\n  name: IconName;\n  style?: React.CSSProperties | undefined;\n  color?: string;\n  fontSize?: number;\n}\n\nconst Icon: React.FC<IProps> = ({ name, color, style }) => {\n  return (\n    <Box>\n      <i className={IconNamesMap[name]} color={color} style={style} />\n    </Box>\n  );\n};\nexport default Icon;\n","import { Box, Button } from \"@theme-ui/components\";\nimport React from \"react\";\nimport theme from \"../../shared/theme\";\nimport Icon from \"../Icon\";\n\ninterface IProps {\n  isActive: boolean;\n  handleStopCounter: () => void;\n}\n\nconst ArrowButton: React.FC<IProps> = ({ isActive, handleStopCounter }) => {\n  return (\n    <Box>\n      {isActive ? (\n        <Button\n          onClick={handleStopCounter}\n          sx={{\n            cursor: \"pointer\",\n            border: \"none\",\n            width: theme.space[24],\n            height: theme.space[24],\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            display: \"flex\",\n            fontSize: theme.space[25],\n            position: \"absolute\",\n            right: theme.space[26],\n            top: theme.space[27],\n            background: \"transparent\",\n          }}\n        >\n          <Icon name=\"rightArrow\" />\n          <Box\n            sx={{\n              width: theme.space[21],\n              height: theme.space[21],\n              fontSize: theme.space[28],\n              marginTop: theme.space[29],\n              alignItems: \"center\",\n              justifyContent: \"center\",\n              display: \"flex\",\n              transform: \"rotate(90deg)\",\n              position: \"absolute\",\n              marginLeft: theme.space[30],\n            }}\n          >\n            <Icon name=\"minus\" />\n          </Box>\n        </Button>\n      ) : null}\n    </Box>\n  );\n};\n\nexport default ArrowButton;\n","import { Button, Flex } from \"@theme-ui/components\";\nimport React from \"react\";\nimport theme from \"../../shared/theme\";\n\ninterface IProps {\n  valueSelect: string;\n  startCounter: () => void;\n  isActive: boolean;\n  stopCounter: () => void;\n  handleFalseACtive?: () => void;\n  handleActiveTrue: () => void;\n}\n\nconst CounterButton: React.FC<IProps> = ({\n  valueSelect,\n  startCounter,\n  isActive,\n  stopCounter,\n  handleFalseACtive,\n  handleActiveTrue,\n}) => {\n  const switchColors =\n    valueSelect === \"pomodoroCounter\"\n      ? theme.colors.danger[1]\n      : valueSelect === \"shortBreakCounter\"\n      ? \"rgb(70, 142, 145)\"\n      : valueSelect === \"longBreakCounter\"\n      ? \"rgb(67, 126, 168)\"\n      : theme.colors.danger[1];\n\n  const handleStartCounter = () => {\n    startCounter();\n    handleActiveTrue();\n  };\n\n  const handleStopCounter = () => {\n    handleFalseACtive && handleFalseACtive();\n    stopCounter();\n  };\n\n  return (\n    <Flex\n      sx={{\n        alignItems: \"center\",\n        justifyContent: \"center\",\n      }}\n    >\n      {!isActive ? (\n        <Button\n          onClick={handleStartCounter}\n          sx={{\n            cursor: \"pointer\",\n            border: \"none\",\n            outline: \"none\",\n            marginTop: theme.space[16],\n            borderRadius: theme.fontSizes[0],\n            fontFamily: \"ArialRoundedMTBold\",\n            fontSize: theme.fontSizes[6],\n            height: theme.space[22],\n            color: switchColors,\n            fontWeight: theme.fontWeights[9],\n            width: theme.space[23],\n            backgroundColor: theme.colors.whites[8],\n          }}\n        >\n          START\n        </Button>\n      ) : (\n        <Button\n          onClick={handleStopCounter}\n          sx={{\n            cursor: \"pointer\",\n            border: \"none\",\n            outline: \"none\",\n            marginTop: theme.space[16],\n            borderRadius: theme.fontSizes[0],\n            fontFamily: \"ArialRoundedMTBold\",\n            fontSize: theme.fontSizes[6],\n            height: theme.space[22],\n            color: switchColors,\n            fontWeight: theme.fontWeights[9],\n            width: theme.space[23],\n            backgroundColor: theme.colors.whites[8],\n          }}\n        >\n          STOP\n        </Button>\n      )}\n    </Flex>\n  );\n};\n\nexport default CounterButton;\n","import React from \"react\";\nimport { Box, Flex } from \"theme-ui\";\nimport useCounter from \"../../hooks/useCounter\";\nimport theme from \"../../shared/theme\";\nimport ArrowButton from \"./arrowButton\";\nimport CounterButton from \"./counterButton\";\nimport { useSelector } from \"react-redux\";\n\ninterface IProps {\n  valueSelect: string;\n  handleActive: () => void;\n  isActive: boolean;\n  handleStopCounter: () => void;\n  handleFalseACtive: () => void;\n  toggleContent: (content: string) => void;\n  handleActiveTrue: () => void;\n}\n\nconst LongBreakCounter: React.FC<IProps> = ({\n  valueSelect,\n  handleActive,\n  isActive,\n  handleStopCounter,\n  handleFalseACtive,\n  toggleContent,\n  handleActiveTrue,\n}) => {\n  const time = useSelector((state: RootState) => state.pomodoroCounter);\n  const { seconds, startCounter, minutes, stopCounter } = useCounter(\n    0,\n    time.long\n  );\n\n  const counter = () => {\n    return (\n      <Flex>\n        <Box>{minutes < 10 ? \"0\" + minutes : minutes}</Box>\n        <Box>:</Box>\n        <Box>{seconds < 10 ? \"0\" + seconds : seconds}</Box>\n      </Flex>\n    );\n  };\n\n  const conditionalHandler = () => {\n    if (minutes === 0 && seconds === 0) {\n      handleFalseACtive();\n      toggleContent(\"pomodoroCounter\");\n    } else {\n      return counter();\n    }\n  };\n\n  return (\n    <Flex\n      sx={{\n        fontSize: theme.space[31],\n        fontWeight: \"bold\",\n        marginTop: theme.space[9],\n        fontFamily: \"ArialRoundedMTBold\",\n        color: \"white\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        flexDirection: \"column\",\n      }}\n    >\n      {conditionalHandler()}\n      <CounterButton\n        startCounter={startCounter}\n        valueSelect={valueSelect}\n        isActive={isActive}\n        stopCounter={stopCounter}\n        handleActiveTrue={handleActiveTrue}\n      />\n      <ArrowButton isActive={isActive} handleStopCounter={handleStopCounter} />\n    </Flex>\n  );\n};\n\nexport default LongBreakCounter;\n","import React from \"react\";\nimport { Box, Flex } from \"theme-ui\";\nimport useCounter from \"../../hooks/useCounter\";\nimport theme from \"../../shared/theme\";\nimport ArrowButton from \"./arrowButton\";\nimport CounterButton from \"./counterButton\";\nimport { useSelector } from \"react-redux\";\n\ninterface IProps {\n  valueSelect: string;\n  isActive: boolean;\n  handleStopCounter: () => void;\n  toggleContent: (content: string) => void;\n  handleFalseACtive: () => void;\n  handleActiveTrue: () => void;\n}\n\nconst PomodoroCounter: React.FC<IProps> = ({\n  valueSelect,\n  isActive,\n  handleStopCounter,\n  toggleContent,\n  handleFalseACtive,\n  handleActiveTrue,\n}) => {\n  const time = useSelector((state: RootState) => state.pomodoroCounter);\n  const { seconds, minutes, startCounter, stopCounter } = useCounter(\n    0,\n    time.count\n  );\n\n  const counter = () => {\n    return (\n      <Flex>\n        <Box>{minutes < 10 ? \"0\" + minutes : minutes}</Box>\n        <Box>:</Box>\n        <Box>{seconds < 10 ? \"0\" + seconds : seconds}</Box>\n      </Flex>\n    );\n  };\n\n  const conditionalHandler = () => {\n    if (minutes === 0 && seconds === 55) {\n      setTimeout(() => {\n        stopCounter();\n        handleFalseACtive();\n      });\n      toggleContent(\"shortBreakCounter\");\n    } else {\n      return counter();\n    }\n  };\n\n  return (\n    <Flex\n      sx={{\n        fontSize: theme.space[31],\n        fontWeight: \"bold\",\n        marginTop: theme.space[9],\n        fontFamily: \"ArialRoundedMTBold\",\n        color: \"white\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        flexDirection: \"column\",\n      }}\n    >\n      {conditionalHandler()}\n      <CounterButton\n        startCounter={startCounter}\n        stopCounter={stopCounter}\n        valueSelect={valueSelect}\n        isActive={isActive}\n        handleFalseACtive={handleFalseACtive}\n        handleActiveTrue={handleActiveTrue}\n      />\n      <ArrowButton isActive={isActive} handleStopCounter={handleStopCounter} />\n    </Flex>\n  );\n};\n\nexport default PomodoroCounter;\n","import React from \"react\";\nimport { Box, Flex } from \"theme-ui\";\nimport useCounter from \"../../hooks/useCounter\";\nimport theme from \"../../shared/theme\";\nimport ArrowButton from \"./arrowButton\";\nimport CounterButton from \"./counterButton\";\nimport { useSelector } from \"react-redux\";\n\ninterface IProps {\n  valueSelect: string;\n  isActive: boolean;\n  handleStopCounter: () => void;\n  handleFalseACtive: () => void;\n  toggleContent: (content: string) => void;\n  handleActiveTrue: () => void;\n  autoBreakSwitch: boolean;\n}\n\nconst ShortBreakCounter: React.FC<IProps> = ({\n  valueSelect,\n  isActive,\n  handleStopCounter,\n  handleFalseACtive,\n  toggleContent,\n  handleActiveTrue,\n  autoBreakSwitch,\n}) => {\n  const time = useSelector((state: RootState) => state.pomodoroCounter);\n  const { seconds, startCounter, minutes, stopCounter } = useCounter(\n    0,\n    time.short\n  );\n  \n\n  const counter = () => {\n    return (\n      <Flex>\n        <Box>{minutes < 10 ? \"0\" + minutes : minutes}</Box>\n        <Box>:</Box>\n        <Box>{seconds < 10 ? \"0\" + seconds : seconds}</Box>\n      </Flex>\n    );\n  };\n\n  const conditionalHandler = () => {\n    if (autoBreakSwitch) {\n      if (minutes === 0 && seconds === 0) {\n        handleFalseACtive();\n        toggleContent(\"longBreakCounter\");\n      }\n      if (minutes !== 0 && seconds === 0) {\n        setTimeout(() => {\n          handleActiveTrue();\n          startCounter();\n        }, 1000);\n      }\n    } else {\n      if (minutes === 0 && seconds === 0) {\n        handleFalseACtive();\n        toggleContent(\"longBreakCounter\");\n      }\n    }\n    return counter();\n  };\n\n  return (\n    <Flex\n      sx={{\n        fontSize: theme.space[31],\n        fontWeight: \"bold\",\n        marginTop: theme.space[9],\n        fontFamily: \"ArialRoundedMTBold\",\n        color: \"white\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        flexDirection: \"column\",\n      }}\n    >\n      {conditionalHandler()}\n      <CounterButton\n        startCounter={startCounter}\n        stopCounter={stopCounter}\n        valueSelect={valueSelect}\n        isActive={isActive}\n        handleFalseACtive={handleFalseACtive}\n        handleActiveTrue={handleActiveTrue}\n      />\n      <ArrowButton isActive={isActive} handleStopCounter={handleStopCounter} />\n    </Flex>\n  );\n};\n\nexport default ShortBreakCounter;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Box, Button, Flex } from \"theme-ui\";\nimport theme from \"../../shared/theme\";\nimport LongBreakCounter from \"./longBreakCounter\";\nimport PomodoroCounter from \"./pomodoroCounter\";\nimport ShortBreakCounter from \"./shortBreakCounter\";\n\ninterface IProps {\n  valueSelect: string;\n  toggleContent: (content: string) => void;\n}\n\nconst Counter: React.FC<IProps> = ({ valueSelect, toggleContent }) => {\n  const [isActive, setIsActive] = React.useState<boolean>(false);\n  const autoBreakSwitch = useSelector(\n    (state: RootState) => state.pomodoroCounter.autoBreak\n  );\n\n  const handleActive = () => {\n    setIsActive((current) => !current);\n  };\n\n  const handleFalseACtive = () => {\n    setIsActive(false);\n  };\n\n  const handleActiveTrue = () => {\n    setIsActive(true);\n  };\n\n  const switchCounters = () => {\n    if (valueSelect === \"pomodoroCounter\") {\n      return (\n        <PomodoroCounter\n          valueSelect={valueSelect}\n          isActive={isActive}\n          handleStopCounter={handleStopCounter}\n          toggleContent={toggleContent}\n          handleFalseACtive={handleFalseACtive}\n          handleActiveTrue={handleActiveTrue}\n        />\n      );\n    } else if (valueSelect === \"shortBreakCounter\") {\n      return (\n        <ShortBreakCounter\n          valueSelect={valueSelect}\n          isActive={isActive}\n          handleStopCounter={handleStopCounter}\n          toggleContent={toggleContent}\n          handleFalseACtive={handleFalseACtive}\n          autoBreakSwitch={autoBreakSwitch}\n          handleActiveTrue={handleActiveTrue}\n        />\n      );\n    }\n    return (\n      <LongBreakCounter\n        valueSelect={valueSelect}\n        handleActive={handleActive}\n        isActive={isActive}\n        handleStopCounter={handleStopCounter}\n        toggleContent={toggleContent}\n        handleFalseACtive={handleFalseACtive}\n        handleActiveTrue={handleActiveTrue}\n      />\n    );\n  };\n\n  const getValueHandler = (value: string) => () => {\n    if (isActive) {\n      const alertMessage = window.confirm(\n        \"The timer is still running, are you sure you want to switch?\"\n      );\n      if (alertMessage) {\n        toggleContent(value);\n        handleFalseACtive();\n      }\n    } else {\n      toggleContent(value);\n    }\n  };\n\n  const handleStopCounter = () => {\n    if (isActive) {\n      const alertMessage = window.confirm(\n        \"Are you sure you wanto stop the counter?\"\n      );\n      if (alertMessage && valueSelect === \"pomodoroCounter\") {\n        toggleContent(\"shortBreakCounter\");\n        handleActive();\n      } else {\n        toggleContent(\"pomodoroCounter\");\n        handleActive();\n      }\n    }\n  };\n\n  return (\n    <Box\n      sx={{\n        width: theme.space[14],\n        margin: \"auto\",\n        marginTop: theme.space[15],\n        borderRadius: theme.borderRadiuss[1],\n      }}\n    >\n      <Box\n        sx={{\n          background: theme.colors.whites[9],\n          padding: [theme.space[16], theme.space[17], theme.space[18]],\n          borderRadius: theme.borderRadiuss[1],\n          marginBottom: theme.space[9],\n          width: theme.space[8],\n        }}\n      >\n        <Flex\n          sx={{\n            justifyContent: \"center\",\n            alignItems: \"center\",\n          }}\n        >\n          <Button\n            onClick={getValueHandler(\"pomodoroCounter\")}\n            sx={{\n              border: \"none\",\n              outline: \"none\",\n              borderRadius: theme.borderRadiuss[0],\n              fontFamily: \"ArialRoundedMTBold\",\n              fontSize: theme.fontSizes[1],\n              height: theme.space[21],\n              cursor: \"pointer\",\n              background:\n                valueSelect === \"pomodoroCounter\"\n                  ? theme.colors.blacks[11]\n                  : \"transparent\",\n              color: theme.colors.whites[8],\n              opacity: theme.opacities[1],\n              fontWeight: theme.fontWeights[9],\n              display: \"flex\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n            }}\n          >\n            Pomodoro\n          </Button>\n          <Button\n            onClick={getValueHandler(\"shortBreakCounter\")}\n            sx={{\n              border: \"none\",\n              color: theme.colors.whites[8],\n              borderRadius: theme.borderRadiuss[0],\n              fontFamily: \"ArialRoundedMTBold\",\n              fontSize: theme.fontSizes[1],\n              height: theme.space[21],\n              cursor: \"pointer\",\n              fontWeight: theme.fontWeights[9],\n              background:\n                valueSelect === \"shortBreakCounter\"\n                  ? theme.colors.blacks[11]\n                  : \"transparent\",\n              display: \"flex\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n            }}\n          >\n            Short Break\n          </Button>\n          <Button\n            onClick={getValueHandler(\"longBreakCounter\")}\n            sx={{\n              border: \"none\",\n              outline: \"none\",\n              color: theme.colors.whites[8],\n              borderRadius: theme.borderRadiuss[0],\n              fontFamily: \"ArialRoundedMTBold\",\n              fontSize: theme.fontSizes[1],\n              height: theme.space[21],\n              cursor: \"pointer\",\n              background:\n                valueSelect === \"longBreakCounter\"\n                  ? theme.colors.blacks[11]\n                  : \"transparent\",\n              fontWeight: theme.fontWeights[9],\n              display: \"flex\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n            }}\n          >\n            Long Break\n          </Button>\n        </Flex>\n        {switchCounters()}\n      </Box>\n    </Box>\n  );\n};\n\nexport default Counter;\n","import { Box, Input } from \"@theme-ui/components\";\nimport React from \"react\";\nimport theme from \"../../shared/theme\";\n\ninterface IProps {\n  value: number;\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  name: string;\n}\n\nconst LongBreakInput: React.FC<IProps> = ({ value, onChange, name }) => {\n  return (\n    <Box sx={{ width: theme.space[32] }}>\n      <Box\n        sx={{\n          display: \"block\",\n          fontSize: theme.space[33],\n          color: theme.colors.greys[0],\n          marginBottom: theme.space[34],\n        }}\n      >\n        Long Break\n      </Box>\n      <Input\n        value={value}\n        onChange={onChange}\n        name={name}\n        type=\"number\"\n        min=\"0\"\n        sx={{\n          borderRadius: theme.space[34],\n          background: theme.colors.greys[1],\n          fontSize: theme.space[3],\n          padding: theme.space[35],\n          boxShadow: \"none\",\n          border: \"none\",\n          outline: \"none\",\n          color: theme.colors.greys[2],\n          width: theme.space[8],\n          boxSizing: \"border-box\",\n          fontFamily: \"ArialRoundedMTBold\",\n        }}\n      />\n    </Box>\n  );\n};\n\nexport default LongBreakInput;\n","import { Box, Input } from \"@theme-ui/components\";\nimport React from \"react\";\nimport theme from \"../../shared/theme\";\n\ninterface IProps {\n  value: number;\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  name: string;\n}\n\nconst PomodoroInput: React.FC<IProps> = ({ value, onChange, name }) => {\n  return (\n    <Box sx={{ width: theme.space[32] }}>\n      <Box\n        sx={{\n          display: \"block\",\n          fontSize: theme.space[33],\n          color: theme.colors.greys[0],\n          marginBottom: theme.space[34],\n        }}\n      >\n        Pomodoro\n      </Box>\n      <Input\n        value={value}\n        onChange={onChange}\n        name={name}\n        type=\"number\"\n        min=\"0\"\n        sx={{\n          borderRadius: theme.space[34],\n          background: theme.colors.greys[1],\n          fontSize: theme.space[3],\n          padding: theme.space[35],\n          boxShadow: \"none\",\n          border: \"none\",\n          outline: \"none\",\n          color: theme.colors.greys[2],\n          width: theme.space[8],\n          boxSizing: \"border-box\",\n          fontFamily: \"ArialRoundedMTBold\",\n        }}\n      />\n    </Box>\n  );\n};\n\nexport default PomodoroInput;\n","import { Box, Input } from \"@theme-ui/components\";\nimport React from \"react\";\nimport theme from \"../../shared/theme\";\n\ninterface IProps {\n  value: number;\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  name: string;\n}\n\nconst ShortBreakInput: React.FC<IProps> = ({ value, onChange, name }) => {\n  return (\n    <Box sx={{ width: theme.space[32] }}>\n      <Box\n        sx={{\n          display: \"block\",\n          fontSize: theme.space[33],\n          color: theme.colors.greys[0],\n          marginBottom: theme.space[34],\n        }}\n      >\n        Short Break\n      </Box>\n      <Input\n        value={value}\n        onChange={onChange}\n        name={name}\n        type=\"number\"\n        min=\"0\"\n        sx={{\n          borderRadius: theme.space[34],\n          background: theme.colors.greys[1],\n          fontSize: theme.space[3],\n          padding: theme.space[35],\n          boxShadow: \"none\",\n          border: \"none\",\n          outline: \"none\",\n          color: theme.colors.greys[2],\n          width: theme.space[8],\n          boxSizing: \"border-box\",\n          fontFamily: \"ArialRoundedMTBold\",\n          webkitTapHighlightColor: \"transparent\",\n        }}\n      />\n    </Box>\n  );\n};\n\nexport default ShortBreakInput;\n","import { Box } from \"@theme-ui/components\";\nimport React from \"react\";\nimport theme from \"../../shared/theme\";\nimport LongBreakInput from \"./longBreakInput\";\nimport PomodoroInput from \"./pomodoroInput\";\nimport ShortBreakInput from \"./shortBreakInput\";\n\ninterface IProps {\n  values: TState;\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n}\n\nconst SettingsInputs: React.FC<IProps> = ({ values, onChange }) => {\n  return (\n    <Box\n      sx={{\n        borderTop: `${theme.space[36]} solid ${theme.colors.danger[2]}`,\n        borderBottom: `${theme.space[36]} solid ${theme.colors.danger[2]}`,\n        paddingTop: theme.space[16],\n        paddingBottom: theme.space[16],\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"center\",\n        fontFamily: \"ArialRoundedMTBold\",\n      }}\n    >\n      <Box\n        sx={{\n          color: theme.colors.greys[2],\n          fontWeight: \"bold\",\n          display: \"flex\",\n          alignItems: \"center\",\n        }}\n      >\n        Time (minutes)\n      </Box>\n      <Box\n        sx={{\n          display: \"flex\",\n          justifyContent: \"space-between\",\n          marginTop: theme.space[35],\n        }}\n      >\n        <PomodoroInput value={values.count} onChange={onChange} name=\"count\" />\n        <ShortBreakInput\n          value={values.short}\n          onChange={onChange}\n          name=\"short\"\n        />\n        <LongBreakInput value={values.long} onChange={onChange} name=\"long\" />\n      </Box>\n    </Box>\n  );\n};\n\nexport default SettingsInputs;\n","export const ADD_POMODORO_TIME = \"ADD_POMODORO_TIME\";\nexport const AUTO_BREAK = \"AUTO_BREAK\"\n \n","import { Switch } from \"@theme-ui/components\";\nimport React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { AUTO_BREAK } from \"../redux/actions/actionTypes\";\nimport theme from \"../shared/theme\";\n\nconst CheckboxInput = () => {\n  const autoSwitch = useSelector(\n    (state: RootState) => state.pomodoroCounter.autoBreak\n  );\n  const dispatch = useDispatch();\n\n  return (\n    <Switch\n      checked={autoSwitch}\n      onChange={() => dispatch({ type: AUTO_BREAK })}\n      sx={{\n        cursor: \"pointer\",\n        background: autoSwitch\n          ? theme.colors.success[1]\n          : theme.colors.greys[4],\n      }}\n    />\n  );\n};\n\nexport default CheckboxInput;\n","import { Box, Flex } from \"@theme-ui/components\";\nimport React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport theme from \"../../shared/theme\";\nimport CheckboxInput from \"../checkbox\";\nimport Checkbox from \"../checkbox\";\n\nconst AutoBreakStart = () => {\n  return (\n    <Flex\n      sx={{\n        borderTop: [theme.borders[0], theme.colors.danger[2]],\n        paddingBottom: theme.space[9],\n        paddingTop: theme.space[9],\n        flexDirection: \"column\",\n        justifyContent: \"center\",\n      }}\n    >\n      <Flex\n        sx={{\n          width: theme.space[8],\n          justifyContent: \"space-between\",\n          alignItems: \"center\",\n          display: \"flex\",\n        }}\n      >\n        <Flex\n          sx={{\n            color: theme.colors.greys[2],\n            fontWeight: \"bold\",\n            alignItems: \"center\",\n          }}\n        >\n          Auto start Breaks?\n        </Flex>\n        <Box>\n          <CheckboxInput />\n        </Box>\n      </Flex>\n    </Flex>\n  );\n};\n\nexport default AutoBreakStart;\n","import { Box, Button, Flex } from \"@theme-ui/components\";\nimport React from \"react\";\nimport { useModal } from \"../../Providers/ModalProvider\";\nimport theme from \"../../shared/theme\";\nimport SettingsInputs from \"./settingsInputs\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { addPomodoroTime } from \"../../redux/actions/actions\";\nimport AutoBreakStart from \"./autoBreakStart\";\n\nconst SettingsModalContent = () => {\n  const time = useSelector((state: RootState) => state.pomodoroCounter);\n  const [values, setValues] = React.useState(time);\n  const dispatch = useDispatch();\n  const { closeModalDialog } = useModal();\n  const ref = React.useRef<HTMLDivElement>(null);\n\n  const bootstrap = React.useCallback(() => {\n    setValues(time);\n  }, [time]);\n\n  React.useEffect(() => {\n    bootstrap();\n  }, [bootstrap]);\n\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = e.target;\n    setValues({\n      ...values,\n      [name]: Number(value),\n    });\n  };\n\n  const handleSubmitTimes = React.useCallback(\n    (values: TState) => {\n      if (values.count === 0 || values.short === 0 || values.long === 0) {\n      } else {\n        dispatch(addPomodoroTime(values));\n        closeModalDialog();\n      }\n    },\n    [closeModalDialog, dispatch]\n  );\n\n  const handleClickOutside = React.useCallback(\n    (e: MouseEvent) => {\n      const el = e.target;\n\n      if (el instanceof Node && ref.current && !ref.current.contains(el)) {\n        closeModalDialog();\n        handleSubmitTimes(values);\n      }\n    },\n    [closeModalDialog, handleSubmitTimes, values]\n  );\n\n  React.useEffect(() => {\n    document.addEventListener(\"mousedown\", handleClickOutside);\n    return function cleanup() {\n      document.removeEventListener(\"mousedown\", handleClickOutside);\n    };\n  }, [handleClickOutside]);\n\n  return (\n    <Box ref={ref}>\n      <Flex\n        sx={{\n          width: theme.space[8],\n          justifyContent: \"space-between\",\n          marginBottom: theme.space[3],\n          marginTop: theme.space[10],\n          fontFamily: \"ArialRoundedMTBold\",\n        }}\n      >\n        <Box\n          sx={{\n            fontSize: theme.space[3],\n            color: \"rgb(187, 187, 187)\",\n            textTransform: \"uppercase\",\n            fontWeight: \"bold\",\n          }}\n        >\n          TIMER SETTING\n        </Box>\n        <Box\n          onClick={() => handleSubmitTimes(values)}\n          sx={{\n            cursor: \"pointer\",\n            fontSize: theme.space[37],\n            width: theme.space[38],\n            height: theme.space[39],\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"flex-end\",\n          }}\n        >\n          <Box\n            sx={{\n              transform: \"rotate(45deg)\",\n              color: \"black\",\n              marginLeft: theme.space[40],\n              marginTop: theme.space[41],\n              opacity: theme.space[42],\n              zIndex: theme.space[43],\n            }}\n          >\n            +\n          </Box>\n        </Box>\n      </Flex>\n      <SettingsInputs values={values} onChange={handleInputChange} />\n      <AutoBreakStart />\n      <Box\n        style={{\n          borderTop: `${theme.space[36]} solid ${theme.colors.danger[2]}`,\n          textAlign: \"right\",\n          width: theme.space[8],\n        }}\n      >\n        <Button\n          onClick={() => handleSubmitTimes(values)}\n          sx={{\n            marginTop: theme.space[33],\n            marginBottom: theme.space[10],\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            textAlign: \"center\",\n            borderRadius: theme.borderRadiuss[0],\n            cursor: \"pointer\",\n            color: \"white\",\n            opacity: theme.opacities[2],\n            fontSize: theme.space[33],\n            minWidth: theme.space[11],\n            backgroundColor: theme.colors.greys[3],\n            border: `${theme.borders[1]} ${theme.colors.greys[3]}`,\n            display: \"inline-block\",\n          }}\n        >\n          OK\n        </Button>\n      </Box>\n    </Box>\n  );\n};\n\nexport default SettingsModalContent;\n","import { ADD_POMODORO_TIME, AUTO_BREAK } from \"./actionTypes\";\n\nexport const addPomodoroTime = (payload: TState) => {\n  return {\n    type: ADD_POMODORO_TIME,\n    payload,\n  };\n};\n\nexport const autoBreak = () => {\n  return { type: AUTO_BREAK };\n};\n","import React from \"react\";\nimport PopPop from \"react-poppop\";\nimport theme from \"./theme\";\ninterface IProps {\n  content?: any;\n  closeModalDialog: () => void;\n  visible: boolean;\n}\n\nconst ModalDialog: React.FC<IProps> = ({\n  visible,\n  closeModalDialog,\n  content,\n}) => {\n  return (\n    <PopPop\n      open={visible}\n      contentStyle={{\n        borderRadius: theme.borderRadiuss[2],\n        zIndex: theme.space[45],\n      }}\n      closeModalDialog={closeModalDialog}\n    >\n      {content && content}\n    </PopPop>\n  );\n};\n\nexport default ModalDialog;\n","import React, { createContext, useState } from \"react\";\nimport SettingsModalContent from \"../Components/settings/settingsModalContent\";\nimport ModalDialog from \"../shared/modal\";\n\ninterface IProps {\n  setDialog?: any;\n  closeModalDialog?: () => void;\n}\n\nconst ModalContext = createContext<IProps | null>(null);\n\nconst ModalProvider: React.FC<IProps> = ({ children }) => {\n  const [visible, setVisible] = useState(false);\n  const [content, setContent] = useState<React.FC>();\n\n  const closeModalDialog = () => {\n    setVisible(false);\n  };\n\n  const setDialog = (content: React.FC) => {\n    setVisible(true);\n    setContent(content);\n  };\n\n  return (\n    <ModalContext.Provider value={{ setDialog, closeModalDialog }}>\n      {children}\n      <ModalDialog\n        closeModalDialog={closeModalDialog}\n        visible={visible}\n        content={content}\n      />\n    </ModalContext.Provider>\n  );\n};\nexport const useModal = () =>\n  React.useContext(ModalContext) as Required<IProps>;\n\nexport const useLabelConfirmDialog = () => {\n  const { setDialog } = useModal();\n\n  return () => {\n    setDialog(<SettingsModalContent />);\n  };\n};\n\nexport default ModalProvider;\n","import { Box, Button, Flex } from \"@theme-ui/components\";\nimport React from \"react\";\nimport { useLabelConfirmDialog } from \"../../Providers/ModalProvider\";\nimport theme from \"../../shared/theme\";\nimport Icon from \"../Icon\";\n\nconst Settings = () => {\n  const openLabelConfirmDialog = useLabelConfirmDialog();\n  return (\n    <Flex\n      sx={{\n        justifyContent: \"center\",\n        alignItems: \"center\",\n      }}\n    >\n      <Button\n        onClick={openLabelConfirmDialog}\n        sx={{\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n          textAlign: \"center\",\n          borderRadius: theme.borderRadiuss[8],\n          cursor: \"pointer\",\n          opacity: theme.radii[8],\n          background: \"none rgba(255, 255, 255, 0.2)\",\n          fontSize: theme.fontSizes[0],\n          minWidth: theme.space[11],\n          border: \"none\",\n          outline: \"none\",\n          color: theme.colors.whites[8],\n          fontWeight: theme.fontWeights[5],\n          fontFamily: \"ArialRoundedMTBold\",\n        }}\n      >\n        <Icon\n          name=\"settings\"\n          style={{\n            marginRight: theme.space[0],\n            fontSize: theme.fontSizes[2],\n          }}\n        />\n        <Box>Settings</Box>\n      </Button>\n    </Flex>\n  );\n};\n\nexport default Settings;\n","import React from \"react\";\nimport { Flex } from \"theme-ui\";\nimport theme from \"../shared/theme\";\nimport Icon from \"./Icon\";\nimport Settings from \"./settings/settings\";\n\nconst Header = () => {\n  return (\n    <Flex\n      sx={{\n        width: theme.space[8],\n        height: theme.space[5],\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        fontFamily: \"ArialRoundedMTBold\",\n      }}\n    >\n      <Flex\n        sx={{\n          width: theme.space[8],\n          height: theme.space[8],\n          justifyContent: \"space-between\",\n          alignItems: \"center\",\n        }}\n      >\n        <Flex\n          sx={{\n            color: theme.colors.whites[8],\n            fontSize: theme.fontSizes[5],\n            fontWeight: theme.fontWeights[9],\n          }}\n        >\n          <Icon\n            name=\"checkCircle\"\n            style={{\n              color: theme.colors.whites[8],\n              width: theme.space[9],\n              marginRight: theme.space[0],\n            }}\n          />\n          <span>Pomocounter</span>\n        </Flex>\n        <Settings />\n      </Flex>\n    </Flex>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\nimport { Box } from \"theme-ui\";\nimport theme from \"../shared/theme\";\nimport Counter from \"./Counter\";\nimport Header from \"./header\";\n\ninterface IProps {\n  valueSelect: string;\n  toggleContent: (content: string) => void;\n}\n\nconst LayoutContent: React.FC<IProps> = ({ valueSelect, toggleContent }) => {\n  return (\n    <Box\n      style={{\n        width: theme.space[13],\n      }}\n    >\n      <Header />\n      <Box\n        sx={{\n          margin: \"auto\",\n          borderTop: `${theme.borders[0]} solid ${theme.colors.blacks[12]}`,\n        }}\n      >\n        <Box\n          sx={{\n            textAlign: \"center\",\n            width: theme.space[8],\n          }}\n        >\n          <Counter valueSelect={valueSelect} toggleContent={toggleContent} />\n        </Box>\n      </Box>\n    </Box>\n  );\n};\n\nexport default LayoutContent;\n","import { Flex } from \"theme-ui\";\nimport useToggleContent from \"../hooks/useToggleContent\";\nimport theme from \"../shared/theme\";\nimport LayoutContent from \"./layoutContent\";\n\nconst Layout = () => {\n  const { valueSelect, toggleContent } = useToggleContent();\n\n  const switchColors =\n    valueSelect === \"pomodoroCounter\"\n      ? theme.colors.danger[1]\n      : valueSelect === \"shortBreakCounter\"\n      ? \"rgb(70, 142, 145)\"\n      : valueSelect === \"longBreakCounter\"\n      ? \"rgb(67, 126, 168)\"\n      : theme.colors.danger[1];\n\n  return (\n    <Flex\n      sx={{\n        width: theme.space[8],\n        height: theme.space[12],\n        justifyContent: \"center\",\n        background: switchColors,\n      }}\n    >\n      <LayoutContent valueSelect={valueSelect} toggleContent={toggleContent} />\n    </Flex>\n  );\n};\n\nexport default Layout;\n","import React from \"react\";\nimport { ThemeProvider } from \"styled-components\";\nimport theme from \"../shared/theme\";\n\ninterface IProps {\n  children: any;\n}\n\nconst Theme: React.FC<IProps> = ({ children }) => {\n  return <ThemeProvider theme={theme}>{children}</ThemeProvider>;\n};\nexport default Theme;\n","import Layout from \"./Components/layout\";\nimport ModalProvider from \"./Providers/ModalProvider\";\nimport Theme from \"./Providers/Theme\";\n\nconst App = () => {\n  return (\n    <ModalProvider>\n      <Theme>\n        <Layout />\n      </Theme>\n    </ModalProvider>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { ADD_POMODORO_TIME, AUTO_BREAK } from \"./../actions/actionTypes\";\n\nconst initialState: TState = {\n  count: 25,\n  short: 5,\n  long: 15,\n  autoBreak: false,\n};\n\nconst pomodoroCounter = (state = initialState, action: any) => {\n  switch (action.type) {\n    case ADD_POMODORO_TIME:\n      return {\n        ...state,\n        ...action.payload,\n      };\n    case AUTO_BREAK:\n      return {\n        ...state,\n        autoBreak: !state.autoBreak,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default pomodoroCounter;\n","import { combineReducers } from \"redux\";\n\nimport pomodoroCounter from \"./pomodoroCounterReducer\";\n\nconst rootReducer = combineReducers({\n  pomodoroCounter,\n});\n\nexport default rootReducer;\n","import { applyMiddleware, createStore } from \"redux\";\nimport { persistStore, persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\"; // defaults to localStorage for web\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"../reducers/rootReducer\";\n\nconst persistConfig = {\n  key: \"root\",\n  storage,\n};\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nexport default () => {\n  const store = createStore(\n    persistedReducer,\n    composeWithDevTools(applyMiddleware(thunk))\n  );\n  const persistor = persistStore(store);\n  return { store, persistor };\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { Provider } from \"react-redux\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport configureStore from \"./redux/store/configureStore\";\n\nconst { store, persistor } = configureStore();\n\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate loading={null} persistor={persistor}>\n      <React.StrictMode>\n        <App />\n      </React.StrictMode>\n    </PersistGate>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}